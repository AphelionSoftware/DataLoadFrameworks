<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/4/2013 10:33:03 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="MGS-VAIOPRO"
  DTS:CreatorName="MGS-VaioPro\MarkGStacey"
  DTS:DTSID="{97F240C0-3D47-4C56-92B3-C3FD4E54906C}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="scrTableList"
  DTS:PackageType="5"
  DTS:VersionBuild="24"
  DTS:VersionGUID="{A25839DB-77EA-4E0B-8280-9E16D3F4F1B5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[cacheDimensionList]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{473528D4-3F60-4528-A67C-320720108F26}"
      DTS:ObjectName="cacheDimensionList">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="129"
              DTS:Length="255"
              DTS:CodePage="1252"
              DTS:ObjectName="DimensionID"
              DTS:DTSID="{A06FABBA-6A80-4DA0-9BA0-19B2B20A2433}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="129"
              DTS:Length="255"
              DTS:CodePage="1252"
              DTS:IndexPosition="1"
              DTS:ObjectName="DimensionName"
              DTS:DTSID="{BB75C3B0-4A5C-40B8-8684-296B3BDE2399}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC7CCE44-C961-43B5-837E-26AF98FB524F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="boolProcessParallel">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{192BE063-B53F-4E18-A80F-11118583CFBB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="objTableList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E04C1A3-0433-447B-A08B-DC4CC2C3F55D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDimensionID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5DDFFBAD-4AC3-440E-A791-4812F0FF33E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDimensionName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQ_ReadDims"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{D33220FB-9F69-4268-A343-F3A2D2C46D28}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQ_ReadDims">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQ_ReadDims\FLC_DoWorkOnEachTable"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{8a30e4f7-ff8f-47d1-b33f-1a5714668732}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FLC_DoWorkOnEachTable">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.SqlServer.Dts.Runtime.Enumerators.ADO.ForEachADOEnumerator, Microsoft.SqlServer.ForEachADOEnumerator, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
            DTS:DTSID="{8692a30d-f826-4c0a-9577-2c4727e585aa}"
            DTS:ObjectName="{656D8BCA-740F-4FED-A6CF-54710B634917}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::objTableList" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables />
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{db9f36ff-09ed-4c4f-b010-b46a4821ba0f}"
              DTS:ObjectName="{19F17616-C7FC-4F35-B682-5658A63D84BF}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::strDimensionName" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{1c21b561-3e29-469f-aec8-28d5ef781e6b}"
              DTS:ObjectName="{BC54101C-EC30-40E9-8B36-A34031A14BCB}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::strDimensionID" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ_ReadDims\scrListOfTables"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{31970ca1-6efa-41b2-95d9-4f8b7daacb43}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="scrListOfTables"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f2f34b2904fc45849ad3189041004928"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::objTableList">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_db914b153eb241daa0460514e20891e3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_db914b153eb241daa0460514e20891e3")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_f2f34b2904fc45849ad3189041004928.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{E4EE5940-9123-422A-B46C-B297E1ED614E}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_db914b153eb241daa0460514e20891e3</RootNamespace><AssemblyName>ST_f2f34b2904fc45849ad3189041004928</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Microsoft.AnalysisServices, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\Program Files (x86)\Microsoft SQL Server\110\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugb686311b-435e-42f6-afa4-aadf1404eb3e/ea0b08e8-42e3-4ab1-9da4-cbd2d8849ec3&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using AMO = Microsoft.AnalysisServices;
#endregion

namespace ST_db914b153eb241daa0460514e20891e3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //NOTE: Aliasing AMO for Microsoft.AnalysisServices;
            bool fireAgain = false;
            //string Conn = Dts.Connections["Cube"].ConnectionString;

            ConnectionManager cm = Dts.Connections["ProcessCube"];
            string strConn = cm.ConnectionString;

            Dts.Events.FireInformation(0, "Conn string", strConn, "", 0, ref fireAgain);
            AMO.Server server = new AMO.Server();
            server.Connect(strConn);

            if (!server.Connected)
            {
                Dts.Events.FireError(0, "connection error", "Could not connect to server", "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
                return;
            }

            server.CaptureXml = true;

            AMO.Database db = server.Databases[server.ConnectionInfo.Catalog];
            Dts.Events.FireInformation(0, "Dimensions", "Retrieved " + db.Dimensions.Count.ToString() + " dimensions", "", 0, ref fireAgain);

            AMO.Cube cube = db.Cubes["Model"];
            AMO.DataSourceView dsv = db.DataSourceViews.FindByName("Sandbox");

            DataTable dt = new DataTable("Dimensions");
            dt.Columns.Add("DimensionName", System.Type.GetType("System.String"));
            dt.Columns.Add("DimensionID", System.Type.GetType("System.String"));
            DataRow oRow;
            foreach(AMO.Dimension dim in db.Dimensions) 
            {
                Dts.Events.FireInformation(0, "Dimensions", dim.Name, "", 0, ref fireAgain);

                oRow = dt.NewRow();
                oRow["DimensionName"] = dim.Name;
                oRow["Dimensionid"] = dim.ID;
                dt.Rows.Add(oRow);
            }

            DataSet ds = new DataSet();
            ds.Tables.Add(dt);
            Dts.Variables["objTableList"].Value = ds;
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_db914b153eb241daa0460514e20891e3</msb:CodeName>
		<msb:DisplayName>ST_db914b153eb241daa0460514e20891e3</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{85C87424-DD9C-4768-82F4-30EC4BE11690}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f2f34b2904fc45849ad3189041004928.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_db914b153eb241daa0460514e20891e3.Properties.Settings.get_Default():ST_db914b153eb241daa0460514e20891e3.Properties.Sett" +
    "ings")]

namespace ST_db914b153eb241daa0460514e20891e3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_db914b153eb241daa0460514e20891e3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_db914b153eb241daa0460514e20891e3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_db914b153eb241daa0460514e20891e3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_db914b153eb241daa0460514e20891e3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_db914b153eb241daa0460514e20891e3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f2f34b2904fc45849ad3189041004928.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPYf/lEAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAA/jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKw2AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
NgAAAAAAAEgAAAACAAUAyCMAAOQSAAABAAAAAAAAABAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBwApAgAAAgAAERYKAigWAAAKbxcAAApycwAAcG8YAAAKCwdvGQAA
CgwCKBYAAApvGgAAChZyiwAAcAhyowAAcBYSAG8bAAAKcxwAAAoNCQhvHQAACglvHgAACi0vAigW
AAAKbxoAAAoWcqUAAHByxwAAcHKjAABwFm8fAAAKJgIoFgAAChdvIAAACioJF28hAAAKCW8iAAAK
CW8jAAAKbyQAAApvJQAAChMEAigWAAAKbxoAAAoWcv8AAHByFQEAcBEEbyYAAApvJwAAChMJEgko
KAAACnIrAQBwKCkAAApyowAAcBYSAG8bAAAKEQRvKgAACnJDAQBwbysAAAomEQRvLAAACnJPAQBw
by0AAAomcv8AAHBzLgAAChMFEQVvLwAACnJfAQBwcnsBAHAoMAAACm8xAAAKJhEFby8AAApylwEA
cHJ7AQBwKDAAAApvMQAACiYRBG8mAAAKbzIAAAoTCitwEQpvMwAACnQwAAABEwcCKBYAAApvGgAA
ChZy/wAAcBEHbzQAAApyowAAcBYSAG8bAAAKEQVvNQAAChMGEQZyXwEAcBEHbzQAAApvNgAAChEG
cq8BAHARB283AAAKbzYAAAoRBW84AAAKEQZvOQAAChEKbzoAAAoth94VEQp1NAAAARMLEQssBxEL
bzsAAArcczwAAAoTCBEIbz0AAAoRBW8+AAAKAigWAAAKbz8AAApyxwEAcG9AAAAKEQhvQQAACgIo
FgAAChZvIAAACioAAAABEAAAAgBZAX3WARUAAAAAHgIoQgAACioAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIAFAAAjfgAA7AUAANQIAAAjU3RyaW5n
cwAAAADADgAA5AEAACNVUwCkEAAAEAAAACNHVUlEAAAAtBAAADACAAAjQmxvYgAAAAAAAAACAAAB
Vx2iAQkDAAAA+iUzABYAAAEAAAA4AAAABQAAAAYAAAAJAAAAAQAAAEIAAAACAAAADwAAAAIAAAAC
AAAAAwAAAAQAAAABAAAABwAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYA
WQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNw
AgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYABATxAwYAIQS6AAYAJgS6AAYASgRwAgoA
dgRgBAoAjwRgBAYApARvAw4AxgQUAQ4A6AQUARIAQQUhBRIAXQUhBQ4AjQUUARYA1wW8BRYAHAa8
BRYAPQa8BRYAawa8BRYAdAa8BRYAlwa8BQYAuga6AAYAyQa6ABYA1wa8BRYA8Aa8BRYA9Qa8BRYA
Ige8BRoASAc8BxoAUgc8BxoAewc8Bx4AnQeKBwYAnQeKBxYAwwe8BRYAzQe8BRoA5Qc8BxoABAg8
BwYAKAi6ABoAPAg8BxoARAg8BxIAYwghBRIAewghBQAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEA
AQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgARAH8BEwARAKwBFwAR
APYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAA
kwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACR
GL8EiQACALwgAAAAAIYAGgIbAAIABCMAAAAAhhi8ARsAAgAAAAEANwI5ALwBWABBALwBWABJALwB
WABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACBALwBWACJALwBXQCRALwBGwCZ
ALwBGwAJALwBGwChADgEYgChAFMEaQApALwBbgC5ALwBegDJALwBGwARALwBGwDRALwBGwAZAPoE
jQDZAE0FkgDhAG8FlwDpAHgFnQDZAKEFoQDxAKwFpgD5ALwBGwD5AN4FWAD5AOYFsQDxAPQFtQDZ
AP4FXQD5AA0GvgD5AC8GwwD5AEwGyQAJAV8GnQABAW8FzwARAYgG1gAhAbAG3AApAcAGnQAxAdAG
4AARAeYG5wA5AW8F7QARAQ4H9ABJATEH+gBZAbwBWABZAWcHAQGhAHMHBwFhAYYHDQEhAakHFgF5
AbcHHAGJAdwHnQBZAe0HIAGRAfQHJgGJAf0HnQBZARYILAGZAYYHMgF5AR8IsQChATQIGwCpAbwB
GwCpAVgIOQGxAYYHPwHZAG0IRgG5AW8FTAHBAYQIUwEZALwBGwAIABQATgAIABgAUwApAJMAgAAu
ABsA6AEuACMA6AEuAGMADgIuAAsAdwEuABMAvwEuADMAvwEuACsA6AEuADsA7gEuAEMA6AEuAFsA
BQJDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AFgBAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgAC
AAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAGQTS1EAAAAAAADNAwAABAAAAAAAAAAAAAAA
AQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAAAAAAAAAA
AAAACgACBQAAAAALAAAAAAAAAAAAAAAKALwFAAAAAAQAAAAAAAAAAAAAAAEAPAcAAAAAAgAAAAAA
AAAAAAAAAQCxAAAAAAAAAAAAAQAAAI4IAAAFAAQAAAAAPE1vZHVsZT4AU1RfZjJmMzRiMjkwNGZj
NDU4NDlhZDMxODkwNDEwMDQ5MjguZGxsAFJlc291cmNlcwBTVF9kYjkxNGIxNTNlYjI0MWRhYTA0
NjA1MTRlMjA4OTFlMy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZGI5MTRiMTUz
ZWIyNDFkYWEwNDYwNTE0ZTIwODkxZTMAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfZjJmMzRiMjkwNGZjNDU4NDlh
ZDMxODkwNDEwMDQ5MjgAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBn
ZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9E
dHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAQ29ubmVjdGlvbnMAZ2V0X0Nvbm5lY3Rpb25zAENvbm5lY3Rpb25NYW5hZ2VyAGdl
dF9JdGVtAGdldF9Db25uZWN0aW9uU3RyaW5nAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50
cwBGaXJlSW5mb3JtYXRpb24ATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMAU2VydmVyAENvbm5l
Y3QAZ2V0X0Nvbm5lY3RlZABGaXJlRXJyb3IAc2V0X1Rhc2tSZXN1bHQAc2V0X0NhcHR1cmVYbWwA
RGF0YWJhc2VDb2xsZWN0aW9uAGdldF9EYXRhYmFzZXMAQ29ubmVjdGlvbkluZm8AZ2V0X0Nvbm5l
Y3Rpb25JbmZvAGdldF9DYXRhbG9nAERhdGFiYXNlAERpbWVuc2lvbkNvbGxlY3Rpb24AZ2V0X0Rp
bWVuc2lvbnMATW9kZWxDb21wb25lbnRDb2xsZWN0aW9uAGdldF9Db3VudABJbnQzMgBUb1N0cmlu
ZwBTdHJpbmcAQ29uY2F0AEN1YmVDb2xsZWN0aW9uAGdldF9DdWJlcwBDdWJlAERhdGFTb3VyY2VW
aWV3Q29sbGVjdGlvbgBnZXRfRGF0YVNvdXJjZVZpZXdzAERhdGFTb3VyY2VWaWV3AEZpbmRCeU5h
bWUAU3lzdGVtLkRhdGEARGF0YVRhYmxlAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5z
AEdldFR5cGUARGF0YUNvbHVtbgBBZGQAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdl
dEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQARGltZW5zaW9uAE5hbWVkQ29tcG9uZW50AGdldF9OYW1l
AERhdGFSb3cATmV3Um93AHNldF9JdGVtAGdldF9JRABEYXRhUm93Q29sbGVjdGlvbgBnZXRfUm93
cwBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAERhdGFTZXQARGF0YVRhYmxlQ29sbGVjdGlv
bgBnZXRfVGFibGVzAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAHNldF9WYWx1ZQBT
VF9kYjkxNGIxNTNlYjI0MWRhYTA0NjA1MTRlMjA4OTFlMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMAAAAAAHFTAFQAXwBkAGIAOQAxADQAYgAxADUAMwBlAGIAMgA0ADEAZABhAGEAMAA0
ADYAMAA1ADEANABlADIAMAA4ADkAMQBlADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAABdQAHIAbwBjAGUAcwBzAEMAdQBiAGUAABdDAG8AbgBuACAAcwB0AHIAaQBu
AGcAAAEAIWMAbwBuAG4AZQBjAHQAaQBvAG4AIABlAHIAcgBvAHIAADdDAG8AdQBsAGQAIABuAG8A
dAAgAGMAbwBuAG4AZQBjAHQAIAB0AG8AIABzAGUAcgB2AGUAcgAAFUQAaQBtAGUAbgBzAGkAbwBu
AHMAABVSAGUAdAByAGkAZQB2AGUAZAAgAAAXIABkAGkAbQBlAG4AcwBpAG8AbgBzAAALTQBvAGQA
ZQBsAAAPUwBhAG4AZABiAG8AeAAAG0QAaQBtAGUAbgBzAGkAbwBuAE4AYQBtAGUAABtTAHkAcwB0
AGUAbQAuAFMAdAByAGkAbgBnAAAXRABpAG0AZQBuAHMAaQBvAG4ASQBEAAAXRABpAG0AZQBuAHMA
aQBvAG4AaQBkAAAZbwBiAGoAVABhAGIAbABlAEwAaQBzAHQAAAAAAPCZitmkoqJGj+BFh8A0XesA
CLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkD
BhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEO
ElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAADgQgABJ5CiAGAQgO
Dg4IEAIDIAACCCAFAggODg4IBCABAQIFIAASgIEFIAASgIUGIAESgIkOBSAAEoCNAyAACAYAAw4O
Dg4FIAASgJ0GIAESgKEOBSAAEoClBiABEoCpDgUgABKAsQUAARJRDgggAhKAtQ4SUQUgABKAuQMg
ABwFIAASgMkFIAIBDhwFIAASgM0GIAEBEoDJBSAAEoDZBiABARKArQUgABKA3QYgARKA4RwEIAEB
HB4HDAISdQ4SfRKAiRKArRKAyRKAwRKA1QgSgL0SgNFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfZGI5
MTRiMTUzZWIyNDFkYWEwNDYwNTE0ZTIwODkxZTMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAx
MwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAANQ2AAAAAAAAAAAA
AO42AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgNgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAEtRZBMAAAEAS1FkEz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBk
AGIAOQAxADQAYgAxADUAMwBlAGIAMgA0ADEAZABhAGEAMAA0ADYAMAA1ADEANABlADIAMAA4ADkA
MQBlADMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANAA5ADYANAAu
ADIAMAA4ADEAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBmADIA
ZgAzADQAYgAyADkAMAA0AGYAYwA0ADUAOAA0ADkAYQBkADMAMQA4ADkAMAA0ADEAMAAwADQAOQAy
ADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMwAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwBmADIAZgAzADQAYgAyADkAMAA0AGYAYwA0ADUAOAA0ADkAYQBkADMA
MQA4ADkAMAA0ADEAMAAwADQAOQAyADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AZABiADkAMQA0AGIAMQA1ADMAZQBiADIANAAxAGQAYQBhADAANAA2ADAA
NQAxADQAZQAyADAAOAA5ADEAZQAzAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA0ADkANgA0AC4AMgAwADgAMQAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADkANgA0AC4AMgAwADgAMQAxAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ_ReadDims.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{99445a7f-0dd9-457c-84e1-18d4f8bc6c8d}"
          DTS:From="Package\SEQ_ReadDims\scrListOfTables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQ_ReadDims\FLC_DoWorkOnEachTable" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SEQ_UseDimsInALookup"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{25362F3C-39B3-45EA-BD9C-8F342C8972BC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQ_UseDimsInALookup">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{2661794A-2DDB-4323-99C3-C0F9D61217EB}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT_GetDimensionID_byName"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims"
                  componentClassID="{671046B0-AA63-4C9F-90E4-C06E0B710CE3}"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="lkp_CacheDims"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from () [refTable]
where [refTable].[DimensionName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DimensionID" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="DimensionName" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim].Columns[DimensionName]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[cacheDimensionList]"
                      connectionManagerRefId="Package.ConnectionManagers[cacheDimensionList]"
                      description="Connection manager used to access lookup data."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Inputs[Lookup Input].Columns[DimensionName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DimensionName"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim].Columns[DimensionName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">DimensionName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Match Output].Columns[processDimensionID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Match Output].Columns[processDimensionID]"
                          name="processDimensionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">DimensionID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrProcessTable"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="scrProcessTable"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using AMO = Microsoft.AnalysisServices;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    List<string> lstDimensionID = new List<string>();

    /// <summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method issues the actual process commands
    /// </summary>
    public override void PostExecute()
    {
        bool fireAgain = false;
        AMO.Server server = new AMO.Server();
        server.Connect(this.Connections.ProcessCube.ConnectionString);

        if (!server.Connected)
        {
            bool cancel = true;
            ComponentMetaData.FireError(0, "Connection error", "Could not connect to server", "", 0, out cancel);
            return;
        }


        AMO.Database db = server.Databases[server.ConnectionInfo.Catalog];

        AMO.Cube cube = db.Cubes["Model"];
        int iErrorCount = 0;
        if (Variables.boolProcessParallel)
        {
            
            //Processes 3 batches: Clear, data, indexes
            ComponentMetaData.FireInformation(0, "Processing ", "Processing in parallel : Clear", "", 0, ref fireAgain);
            ProcessInParallel(server, cube, AMO.ProcessType.ProcessClear, ref iErrorCount);
            ComponentMetaData.FireInformation(0, "Processing ", "Processing in parallel : Data", "", 0, ref fireAgain);
            ProcessInParallel(server, cube, AMO.ProcessType.ProcessData, ref iErrorCount);
            ComponentMetaData.FireInformation(0, "Processing ", "Processing in parallel : Indexes", "", 0, ref fireAgain);
            ProcessInParallel(server, cube, AMO.ProcessType.ProcessIndexes, ref iErrorCount);
            
            /*ComponentMetaData.FireInformation(0, "Processing ", "Processing in parallel : Data", "", 0, ref fireAgain);
            server.CaptureXml = true;//This puts AMO into a command capture mode
            foreach (string dimID in lstDimensionID)
            {
                AMO.MeasureGroup mg = cube.MeasureGroups[dimID];
                //Clear to save memory, data then recalc aids processing speed
                mg.Process(AMO.ProcessType.ProcessData);
            }
            server.CaptureXml = false;//Now we execute the commands
            try
            {
                AMO.XmlaResultCollection results = server.ExecuteCaptureLog(true, false);
                foreach (AMO.XmlaResult x in results)
                {
                    foreach (AMO.XmlaMessage xm in x.Messages)
                    {
                        ComponentMetaData.FireInformation(0, "XMLAResult", "XMLAResultValueMessage " + xm.Description, "", 0, ref fireAgain);
                        if (xm is AMO.XmlaError)
                        {
                            iErrorCount++;
                        }
                    }
                }
            }
            catch (System.Exception ex)
            {
                iErrorCount++;
                ComponentMetaData.FireInformation(0, "Failed Processing", "Failed Processing in parallel with  " + ex.Message + "\nInner Ex:\n" + ex.InnerException, "", 0, ref fireAgain);
            }
           
            ComponentMetaData.FireInformation(0, "Processing ", "Processing in parallel : Indexes", "", 0, ref fireAgain);
            server.CaptureXml = true;//This puts AMO into a command capture mode
            foreach (string dimID in lstDimensionID)
            {
                AMO.MeasureGroup mg = cube.MeasureGroups[dimID];
                //Clear to save memory, data then recalc aids processing speed
                mg.Process(AMO.ProcessType.ProcessIndexes);
            }
            server.CaptureXml = false;//Now we execute the commands
            try
            {
                AMO.XmlaResultCollection results = server.ExecuteCaptureLog(true, false);
                foreach (AMO.XmlaResult x in results)
                {
                    foreach (AMO.XmlaMessage xm in x.Messages)
                    {
                        ComponentMetaData.FireInformation(0, "XMLAResult", "XMLAResultValueMessage " + xm.Description, "", 0, ref fireAgain);
                        if (xm is AMO.XmlaError)
                        {
                            iErrorCount++;
                        }
                    }
                }
            }
            catch (System.Exception ex)
            {
                iErrorCount++;
                ComponentMetaData.FireInformation(0, "Failed Processing", "Failed Processing in parallel with  " + ex.Message + "\nInner Ex:\n" + ex.InnerException, "", 0, ref fireAgain);
            }*/
        
        }
        else
        {
            //Process 1 at a time
            foreach (string dimID in lstDimensionID)
            {
                try
                {
                    ComponentMetaData.FireInformation(0, "Processing ", dimID, "", 0, ref fireAgain);
                    AMO.MeasureGroup mg = cube.MeasureGroups[dimID];
                    //mg.Process(AMO.ProcessType.ProcessFull);
                    //Clear to save memory, data then recalc aids processing speed
                    mg.Process(AMO.ProcessType.ProcessClear);
                    mg.Process(AMO.ProcessType.ProcessData);
                    mg.Process(AMO.ProcessType.ProcessRecalc);
                
                }
                catch (System.Exception ex)
                {
                    iErrorCount++;
                    ComponentMetaData.FireInformation(0, "Failed Processing", "Failed Processing " + dimID + " with  " + ex.Message + "\nInner Ex:\n" + ex.InnerException, "", 0, ref fireAgain);
                }

            }
        }
        //db.Process(AMO.ProcessType.ProcessDefault);

        if (iErrorCount > 0)
        {
            bool cancel = true;
            ComponentMetaData.FireError(0, "Errors occurred in processing", "Check log for errors encountered: " + iErrorCount.ToString(), "", 0, out cancel);
            return;
        }
        base.PostExecute();

    }

    /// <summary>
    /// This process according to option passed in
    /// </summary>
    /// <param name="server"></param>
    /// <param name="cube"></param>
    /// <param name="pType"></param>
    /// <param name="iErrorCount"></param>
    private void ProcessInParallel(AMO.Server server, AMO.Cube cube, AMO.ProcessType pType,  ref int iErrorCount)
    {
        bool fireAgain = false;
        ComponentMetaData.FireInformation(0, "Processing ", "Processing in parallel : Clear", "", 0, ref fireAgain);
        server.CaptureXml = true;//This puts AMO into a command capture mode
        foreach (string dimID in lstDimensionID)
        {
            AMO.MeasureGroup mg = cube.MeasureGroups[dimID];
            //mg.Process(AMO.ProcessType.ProcessFull);
            //Clear to save memory, data then recalc aids processing speed
            mg.Process(pType);
        }
        server.CaptureXml = false;//Now we execute the commands
        try
        {
            AMO.XmlaResultCollection results = server.ExecuteCaptureLog(true, false);
            foreach (AMO.XmlaResult x in results)
            {
                foreach (AMO.XmlaMessage xm in x.Messages)
                {
                    ComponentMetaData.FireInformation(0, "XMLAResult", "XMLAResultValueMessage " + xm.Description, "", 0, ref fireAgain);
                    if (xm is AMO.XmlaError)
                    {
                        iErrorCount++;
                    }
                }
            }
        }
        catch (System.Exception ex)
        {
            iErrorCount++;
            ComponentMetaData.FireInformation(0, "Failed Processing", "Failed Processing in parallel with  " + ex.Message + "\nInner Ex:\n" + ex.InnerException, "", 0, ref fireAgain);
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    /// Adds the list of tables to the backlog
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        lstDimensionID.Add(Row.processDimensionID);
        bool fireAgain = false;
        ComponentMetaData.FireInformation(0, "Dimensions", Row.processDimensionID, "", 0, ref fireAgain);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String processDimensionID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool processDimensionID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ProcessCube
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProcessCube").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean boolProcessParallel
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["boolProcessParallel"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fb8832595624b988b4a91ddb5f1761c.Properties.Settings.get_Default():SC_5fb8832595624b988b4a91ddb5f1761c.Properties.Sett" +
    "ings")]

namespace SC_5fb8832595624b988b4a91ddb5f1761c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_5fb8832595624b988b4a91ddb5f1761c</msb:CodeName>
		<msb:DisplayName>SC_5fb8832595624b988b4a91ddb5f1761c</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{2C0879D1-F260-4616-AEA0-C03D5122C6E8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_5fb8832595624b988b4a91ddb5f1761c.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_5fb8832595624b988b4a91ddb5f1761c.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{AB784678-2883-4673-ADC1-7295530B8771}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_5fb8832595624b988b4a91ddb5f1761c</RootNamespace>
    <AssemblyName>SC_5fb8832595624b988b4a91ddb5f1761c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft SQL Server\110\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebuga8813ff7-a696-44fa-8b51-71b18abcc278/46b845d5-f644-4a1d-9b4c-98e0f065132e&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_5fb8832595624b988b4a91ddb5f1761c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_5fb8832595624b988b4a91ddb5f1761c")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fb8832595624b988b4a91ddb5f1761c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fb8832595624b988b4a91ddb5f1761c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fb8832595624b988b4a91ddb5f1761c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_5fb8832595624b988b4a91ddb5f1761c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_5fb8832595624b988b4a91ddb5f1761c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_5fb8832595624b988b4a91ddb5f1761c.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANk2/lEAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAATkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPxAAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
QQAAAAAAAEgAAAACAAUA6CYAABQaAAABAAAAAAAAADAmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMPAAAGfQEAAAQCAnMRAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCgAABm8DAAAGKkorBwIDbwQAAAYDbw0AAAYt8SoGKh4C
KBEAAAoqAAAbMAcAJgIAAAEAABEWCnMSAAAKCwcCewEAAARvEAAABm8TAAAKbxQAAAoHbxUAAAot
IRcMAigWAAAKFnIRAABwcjMAAHByawAAcBYSAm8XAAAKKgdvGAAACgdvGQAACm8aAAAKbxsAAAoN
CW8cAAAKcm0AAHBvHQAAChMEFhMFAnsCAAAEbxIAAAY5gwAAAAIoFgAAChZyeQAAcHKRAABwcmsA
AHAWEgBvHgAACgIHEQQcEgUoBwAABgIoFgAAChZyeQAAcHLPAABwcmsAAHAWEgBvHgAACgIHEQQa
EgUoBwAABgIoFgAAChZyeQAAcHILAQBwcmsAAHAWEgBvHgAACgIHEQQZEgUoBwAABjjmAAAAAnsD
AAAEbx8AAAoTCji4AAAAEgooIAAAChMGAigWAAAKFnJ5AABwEQZyawAAcBYSAG8eAAAKEQRvIQAA
ChEGbyIAAAoTBxEHHG8jAAAKEQcabyMAAAoRBx8KbyMAAAreaRMIEQUXWBMFAigWAAAKFnJNAQBw
HI0DAAABEwsRCxZycQEAcKIRCxcRBqIRCxhylwEAcKIRCxkRCG8kAAAKohELGnKnAQBwohELGxEI
byUAAAqiEQsoJgAACnJrAABwFhIAbx4AAAreABIKKCcAAAo6PP///94OEgr+FgIAABtvKAAACtwR
BRYxLhcTCQIoFgAAChZyvwEAcHL7AQBwEgUoKQAACigqAAAKcmsAAHAWEglvFwAACioCKCsAAAoq
AAABHAAAAAAhAUZnAWkmAAABAgATAcveAQ4AAAAAGzAHAI8BAAACAAARFgoCKBYAAAoWcnkAAHBy
kQAAcHJrAABwFhIAbx4AAAoDF28sAAAKAnsDAAAEbx8AAAoTByscEgcoIAAACgsEbyEAAAoHbyIA
AAoMCAVvIwAAChIHKCcAAAot294OEgf+FgIAABtvKAAACtwDFm8sAAAKAxcWby0AAAoNCW8uAAAK
Ewg4hgAAABEIby8AAAp0LAAAARMEEQRvMAAACm8uAAAKEwkrSBEJby8AAAp0LgAAARMFAigWAAAK
FnJBAgBwclcCAHARBW8xAAAKKCoAAApyawAAcBYSAG8eAAAKEQV1LwAAASwHDgQlShdYVBEJbzIA
AAotr94VEQl1JwAAARMKEQosBxEKbygAAArcEQhvMgAACjpu////3hURCHUnAAABEwsRCywHEQtv
KAAACtzeWxMGDgQlShdYVAIoFgAAChZyTQEAcBqNAwAAARMMEQwWcocCAHCiEQwXEQZvJAAACqIR
DBhypwEAcKIRDBkRBm8lAAAKohEMKCYAAApyawAAcBYSAG8eAAAK3gAqAAE0AAACADQAKV0ADgAA
AAACAKQAVfkAFQAAAAACAIMAmRwBFQAAAAAAAHIAwTMBWyYAAAETMAcAMwAAAAMAABECewMAAAQD
bwsAAAZvMwAAChYKAigWAAAKFnLRAgBwA28LAAAGcmsAAHAWEgBvHgAACipKAnM0AAAKfQMAAAQC
KAEAAAYqKgIDBAUoNQAACipSAns2AAAKAns3AAAKFpRvOAAACioiAhYoOQAACioeAig6AAAKKh4C
KDsAAAoqOgIoPAAACgIDfQQAAAQqggJ7BAAABG8WAAAKbz0AAApy5wIAcG8+AAAKbz8AAAoqOgIo
PAAACgIDfQUAAAQqlgJ7BQAABG9AAAAKcv8CAHBvQQAACihCAAAKb0MAAAqlNgAAASoeAig8AAAK
KhMwAgAtAAAABAAAEX4GAAAELSByJwMAcNAHAAACKEUAAApvRgAACnNHAAAKCgaABgAABH4GAAAE
Khp+BwAABCoeAoAHAAAEKhp+CAAABCoucxgAAAaACAAABCoeAihKAAAKKgC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAdAcAACN+AADgBwAA0AsAACNTdHJp
bmdzAAAAALATAACcAwAAI1VTAEwXAAAQAAAAI0dVSUQAAABcFwAAuAIAACNCbG9iAAAAAAAAAAIA
AAFXFaIJCQEAAAD6JTMAFgAAAQAAAD0AAAAIAAAACAAAABkAAAARAAAASgAAAA8AAAAEAAAABQAA
AAcAAAAIAAAAAgAAAAEAAAAHAAAAAQAAAAAACgABAAAAAAAGAO4AzQAGAP4AzQAKABsBFAEOADcB
IgESAHYBzQAGAIUBzQAKAOYBywEWAC4CEwIWADUCEwIWADoCEwIaACkDAQMKAJsDigMKAMwDtwMK
AMMEqQQKAO4E3AQKAAUF3AQKACIF3AQKAEEF3AQKAFoF3AQKAHMF3AQKAI4F3AQKAKkF3AQKAMIF
3AQKAPsF2wUKABsG2wUKAF0GFAEKAGQGFAEGAI0GzQAeACwHAwcWAGUHEwIWAIYHEwIWALQHEwIW
AMYHEwIfAO8HAAAWABQIEwIWAD0IEwIWAEoIEwIKAGkIFAEKAKIIFAEKALYIFAEWANQIEwIKAA4J
+wgKABoJ+wgWACYJEwIWADEJEwIWAFQJEwIWAHAJEwIeAI8JAwceANIJAwcaABwKAQMaAEMKAQMH
AFMKAAAaAIMKAQMKAK8KFAEKAMoKtwoKAOcKFAEKAOwKFAEKABAL3AQOADwLJgsOAFULJgsKAGoL
2wUAAAAAAQAAAAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAMABQABABAASwAAAAkABAAK
AAEAEABYAAAADQAEAA8AAQAQAGQAAAANAAUAEQAAABAAbgB4AA0ABgATAAABEACnAHgAEQAIABcA
BgBYABMABgBkABcAAQDtAS8AAQDOAlwAAQDOAlwAEQCrA3AAEQDYA3QAEQAcBJIAUCAAAAAAhhhP
ARsAAQBwIAAAAADGAJMBHwABAJUgAAAAAMYBoAEpAAUAqCAAAAAAxgG0ASkABgCqIAAAAADGAPwB
GwAHALQgAAAAAMYABwIbAAcABCMAAAAAgQBGAjYABwDUJAAAAADGALQBKQALABMlAAAAAIYYTwEb
AAwAJiUAAAAAhhhPAUIADAAxJQAAAACGCFgCTAAPAEYlAAAAAIYIbwJQAA8ATyUAAAAAhgCNAlAA
DwBXJQAAAACGAJUCUAAPAF8lAAAAAIYYTwFgAA8AbiUAAAAAhghCA2YAEACPJQAAAACGGE8BYAAQ
AJ4lAAAAAIYIXgNQABEAxCUAAAAAgxhPARsAEQDMJQAAAACTCOgDeAARAAUmAAAAAJMI/AN9ABEA
DCYAAAAAkwgIBIIAEQAUJgAAAACWCCwElgASACcmAAAAAIYYTwEbABIAGyYAAAAAkRiFC/sBEgAA
AAEAQAQAAAIASAQAAAMAUgQAAAQAWQQAAAEAUgQAAAEAYwQAAAEAZwQAAAIAbgQAAAMAcwQAAAQA
eQQAAAEAYwQAAAEAUgQAAAIAhQQAAAMAWQQAAAEAmQQAAAEAmQQAAAEAowRxAE8BoAB5AE8BoACB
AE8BoACJAE8BoACRAE8BoACZAE8BoAChAE8BoACpAE8BoACxAE8BoAC5AE8BoADBAE8BpQDJAE8B
GwAJAE8BGwDRAHUGqgAJAHwGsQDhAE8BGwAJAPwBGwBBAE8BGwBZALQGTABBAMkGoABBANEGUAAJ
AEUHvADpAFsHwQBBAHgHzABBAJUH0QD5AKgHTADxAL0H1gABAdUH3QAJAb0H4wDpAN8HwQAMAPoH
7wAUAAgIAAFJACsIBQEZAb0HCwEpAWEIEgExAXMITAAxAX8IGAHRAJIIHgEUAJkIUAA5Aa4IGwBB
AbwITADRAJIIJAEJAAcCGwBBAMUIRwFBAOkITAFRAfoHVAFZAQgIWgFhAUcJXgFxAWAJTABZAZkI
UAAMAHoJjAEMAE8BGwARAE8BQgARAFIElgERAIUEmgEpAH4JngERAIgJowERAI0CUAARAJUCUAAZ
AE8BGwDpALIJqAGBAesJrgGJAQYKZgAJAC0KtQGRAb0HuwEJAG4KwgGZAZsKyAG5AU8BGwDBAf4K
zwHBARkL2AFhAE8B3gHZAU8B6wHpAU8BGwAhAE8BGwAuABsAcAIuAGMAlgIuAAsA/wEuABMARwIu
ACMAcAIuACsAcAIuADMARwIuADsAdgIuAEMAcAIuAFsAjQJjAIMAtwCpAEMC8gHJAEMC8gHjACMC
twABAUsCtwAqAWQBkgHmAQQAAQAFAAMABgAEAAcABQAIAAcAAAChAlQAAAC0AlgAAABSA2sAAAB2
A1gAAACbA4gAAAAUBI0AAAA4BJsAAgALAAMAAgAMAAUAAgAQAAcAAgASAAkAAgAUAAsAAgAVAA0A
AQAWAA0AAgAXAA8A6QD5AASAAAABAAAAZBO8XAAAAAAAADkGAAALAAAAAAAAAAAAAAABALAAAAAA
AAQAAAAAAAAAAAAAAAoACwEAAAAABAAAAAAAAAAAAAAACgAUAQAAAAALAAAAAAAAAAAAAAABAFUB
AAAAAAsAAAAAAAAAAAAAAAEAEwIAAAAACwAAAAAAAAAAAAAAAQDeAgAAAAALAAAAAAAAAAAAAAAB
AN8GAAAAAAAAAAABAAAAjAsAAAAAADxNb2R1bGU+AFNDXzVmYjg4MzI1OTU2MjRiOTg4YjRhOTFk
ZGI1ZjE3NjFjLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5l
Y3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNWZiODgzMjU5NTYyNGI5ODhiNGE5MWRkYjVm
MTc2MWMuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZm
ZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBl
bGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0
AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATGlzdGAx
AGxzdERpbWVuc2lvbklEAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUATWljcm9zb2Z0LkFuYWx5c2lz
U2VydmljZXMAU2VydmVyAEN1YmUAUHJvY2Vzc1R5cGUAUHJvY2Vzc0luUGFyYWxsZWwAZ2V0X3By
b2Nlc3NEaW1lbnNpb25JRABnZXRfcHJvY2Vzc0RpbWVuc2lvbklEX0lzTnVsbABOZXh0Um93AEVu
ZE9mUm93c2V0AHByb2Nlc3NEaW1lbnNpb25JRABwcm9jZXNzRGltZW5zaW9uSURfSXNOdWxsAFBh
cmVudENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAA
Z2V0X1Byb2Nlc3NDdWJlAFByb2Nlc3NDdWJlAGdldF9ib29sUHJvY2Vzc1BhcmFsbGVsAGJvb2xQ
cm9jZXNzUGFyYWxsZWwAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0
TWFwAFJvdwBzZXJ2ZXIAY3ViZQBwVHlwZQBpRXJyb3JDb3VudABCdWZmZXJDb2x1bW5JbmRleGVz
AENvbXBvbmVudAB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0
dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAU0NfNWZiODgzMjU5NTYyNGI5ODhiNGE5MWRkYjVmMTc2MWMAU3Ry
aW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAQ29ubmVjdABn
ZXRfQ29ubmVjdGVkAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAw
AGdldF9Db21wb25lbnRNZXRhRGF0YQBGaXJlRXJyb3IARGF0YWJhc2VDb2xsZWN0aW9uAGdldF9E
YXRhYmFzZXMAQ29ubmVjdGlvbkluZm8AZ2V0X0Nvbm5lY3Rpb25JbmZvAGdldF9DYXRhbG9nAERh
dGFiYXNlAGdldF9JdGVtAEN1YmVDb2xsZWN0aW9uAGdldF9DdWJlcwBGaXJlSW5mb3JtYXRpb24A
RW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AE1lYXN1cmVHcm91cENvbGxlY3Rp
b24AZ2V0X01lYXN1cmVHcm91cHMATWVhc3VyZUdyb3VwAFByb2Nlc3NhYmxlTWFqb3JPYmplY3QA
UHJvY2VzcwBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAZ2V0X0lubmVyRXhjZXB0aW9uAENvbmNhdABN
b3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAEludDMyAFRvU3RyaW5nAHNldF9DYXB0dXJlWG1s
AFhtbGFSZXN1bHRDb2xsZWN0aW9uAEV4ZWN1dGVDYXB0dXJlTG9nAFN5c3RlbS5Db2xsZWN0aW9u
cwBJRW51bWVyYWJsZQBJRW51bWVyYXRvcgBYbWxhUmVzdWx0AFhtbGFNZXNzYWdlQ29sbGVjdGlv
bgBnZXRfTWVzc2FnZXMAWG1sYU1lc3NhZ2UAZ2V0X0Rlc2NyaXB0aW9uAFhtbGFFcnJvcgBBZGQA
R2V0U3RyaW5nAElzTnVsbABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9S
dW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1
bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdldF9Db25uZWN0aW9uTWFuYWdlcgBJRFRTVmFyaWFibGVz
MTAwAGdldF9SZWFkT25seVZhcmlhYmxlcwBJRFRTVmFyaWFibGUxMDAAU2NyaXB0Q29tcG9uZW50
RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASURUU0V2YWx1YXRvckNvbnRleHQxMDAA
R2V0VmFsdWVXaXRoQ29udGV4dABCb29sZWFuAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNDXzVmYjg4MzI1OTU2MjRiOTg4YjRhOTFkZGI1ZjE3NjFjLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAA9JAG4AcAB1AHQAIAAwAAAhQwBvAG4AbgBlAGMAdABp
AG8AbgAgAGUAcgByAG8AcgAAN0MAbwB1AGwAZAAgAG4AbwB0ACAAYwBvAG4AbgBlAGMAdAAgAHQA
bwAgAHMAZQByAHYAZQByAAABAAtNAG8AZABlAGwAABdQAHIAbwBjAGUAcwBzAGkAbgBnACAAAD1Q
AHIAbwBjAGUAcwBzAGkAbgBnACAAaQBuACAAcABhAHIAYQBsAGwAZQBsACAAOgAgAEMAbABlAGEA
cgAAO1AAcgBvAGMAZQBzAHMAaQBuAGcAIABpAG4AIABwAGEAcgBhAGwAbABlAGwAIAA6ACAARABh
AHQAYQAAQVAAcgBvAGMAZQBzAHMAaQBuAGcAIABpAG4AIABwAGEAcgBhAGwAbABlAGwAIAA6ACAA
SQBuAGQAZQB4AGUAcwAAI0YAYQBpAGwAZQBkACAAUAByAG8AYwBlAHMAcwBpAG4AZwAAJUYAYQBp
AGwAZQBkACAAUAByAG8AYwBlAHMAcwBpAG4AZwAgAAAPIAB3AGkAdABoACAAIAAAFwoASQBuAG4A
ZQByACAARQB4ADoACgAAO0UAcgByAG8AcgBzACAAbwBjAGMAdQByAHIAZQBkACAAaQBuACAAcABy
AG8AYwBlAHMAcwBpAG4AZwAARUMAaABlAGMAawAgAGwAbwBnACAAZgBvAHIAIABlAHIAcgBvAHIA
cwAgAGUAbgBjAG8AdQBuAHQAZQByAGUAZAA6ACAAABVYAE0ATABBAFIAZQBzAHUAbAB0AAAvWABN
AEwAQQBSAGUAcwB1AGwAdABWAGEAbAB1AGUATQBlAHMAcwBhAGcAZQAgAABJRgBhAGkAbABlAGQA
IABQAHIAbwBjAGUAcwBzAGkAbgBnACAAaQBuACAAcABhAHIAYQBsAGwAZQBsACAAdwBpAHQAaAAg
ACAAABVEAGkAbQBlAG4AcwBpAG8AbgBzAAAXUAByAG8AYwBlAHMAcwBDAHUAYgBlAAAnYgBvAG8A
bABQAHIAbwBjAGUAcwBzAFAAYQByAGEAbABsAGUAbAAAcVMAQwBfADUAZgBiADgAOAAzADIANQA5
ADUANgAyADQAYgA5ADgAOABiADQAYQA5ADEAZABkAGIANQBmADEANwA2ADEAYwAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAL36ID6T9AUyFuxyD1dnwqQAIiYRd
zYCAzJEIt3pcVhk04IkDBhIUAwYSGAMgAAEJIAQBCA4SFRIZBSABARIQBgYVEh0BDgsgBAESIRIl
ESkQCAkgAwESFR0IEhkDIAAOAyAAAgMoAA4DKAACAwYSBQUgAQESBQQgABItBCgAEi0DBhIxAwYS
NQQAABIxBAAAEjUFAAEBEjUECAASMQQIABI1AwYSIAQAABIgBAgAEiAEIAEBDgQgAQEIBiACAg4R
bQUgAR0ICAQBAAAABCAAEnUKIAYBCA4ODggQAgQgABJ5BCAAEn0GIAESgIEOBSAAEoCFBSABEiUO
BRUSHQEOCSAAFRGAiQETAAYVEYCJAQ4EIAATAAUgABKAjQYgARKAkQ4FIAEBESkFIAASgJkFAAEO
HRwFAAIODg4cBwwCEiECEoCBEiUIDhKAkRKAmQIVEYCJAQ4dHAQgAQECByACEoClAgIFIAASgK0D
IAAcBSAAEoC1JwcNAg4SgJESgKUSgLESgLkSgJkVEYCJAQ4SgK0SgK0SgJ0SgJ0dHAUgAQETAAMH
AQIDBhIVAwYdCAQgAQ4IBCABAggFIAASgMEGIAESgMUOBSAAEoDJBiABEoDNHAUAABKA0QYgARwS
gNUIAAESgOERgOUFIAASgOkHIAIBDhKA6QQHARIxBiABARGA8QgBAAIAAAAAAAMAAAFHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQoAQAjU0NfNWZiODgzMjU5NTYyNGI5ODhiNGE5MWRkYjVmMTc2MWMAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAxMwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQAAACRBAAAAAAAAAAAAAD5BAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQQAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQC8XGQTAAABALxcZBM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANQBmAGIA
OAA4ADMAMgA1ADkANQA2ADIANABiADkAOAA4AGIANABhADkAMQBkAGQAYgA1AGYAMQA3ADYAMQBj
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADQAOQA2ADQALgAyADMA
NwA0ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANQBmAGIAOAA4
ADMAMgA1ADkANQA2ADIANABiADkAOAA4AGIANABhADkAMQBkAGQAYgA1AGYAMQA3ADYAMQBjAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADMAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8ANQBmAGIAOAA4ADMAMgA1ADkANQA2ADIANABiADkAOAA4AGIANABhADkAMQBk
AGQAYgA1AGYAMQA3ADYAMQBjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADUAZgBiADgAOAAzADIANQA5ADUANgAyADQAYgA5ADgAOABiADQAYQA5ADEAZABk
AGIANQBmADEANwA2ADEAYwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANAA5ADYANAAuADIAMwA3ADQAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANAA5ADYANAAuADIAMwA3ADQAMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABQMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_5fb8832595624b988b4a91ddb5f1761c</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::boolProcessParallel</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">044adf696e5bb63833d9bdbc84829636</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrProcessTable.Connections[ProcessCube]"
                      connectionManagerID="{EEA8197D-CCF1-4351-9021-782C38D99ADB}:external"
                      connectionManagerRefId="Project.ConnectionManagers[ProcessCube]"
                      description="ProcessCube"
                      name="ProcessCube" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrProcessTable.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrProcessTable.Inputs[Input 0].Columns[processDimensionID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="processDimensionID"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Match Output].Columns[processDimensionID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="scrSrc_TableList"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using AMO = Microsoft.AnalysisServices;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        //NOTE: Aliasing AMO for Microsoft.AnalysisServices;
        bool fireAgain = false;
        AMO.Server server = new AMO.Server();
        server.Connect(this.Connections.ProcessCube.ConnectionString);

        if (!server.Connected)
        {
            bool cancel = true;
            ComponentMetaData.FireError(0, "connection error", "Could not connect to server", "", 0, out cancel);
            return;
        }

        server.CaptureXml = true;

        AMO.Database db = server.Databases[server.ConnectionInfo.Catalog];
        ComponentMetaData.FireInformation(0, "Dimensions", "Retrieved " + db.Dimensions.Count.ToString() + " dimensions", "", 0, ref fireAgain);

        AMO.Cube cube = db.Cubes["Model"];
        AMO.DataSourceView dsv = db.DataSourceViews.FindByName("Sandbox");

        foreach (AMO.Dimension dim in db.Dimensions)
        {
            ComponentMetaData.FireInformation(0, "Dimensions", dim.Name, "", 0, ref fireAgain);

            OutDimBuffer.AddRow();
            OutDimBuffer.DimensionName = dim.Name;
            OutDimBuffer.DimensionID = dim.ID;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutDimBuffer: ScriptBuffer

{
    public OutDimBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DimensionName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DimensionName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DimensionID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DimensionID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutDimBuffer OutDimBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutDimBuffer)
        {
            OutDimBuffer.SetEndOfRowset();
            OutDimBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"OutDim"))
            {
                OutDimBuffer = new OutDimBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ProcessCube
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProcessCube").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_665d5be74a45405e9983c575e3fd516f.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{B72379BB-30F9-467F-85BB-4C9F206191DF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_665d5be74a45405e9983c575e3fd516f</RootNamespace><AssemblyName>SC_C42D0A0D53C44DA4B4A398A3D3586783</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Microsoft.AnalysisServices, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\Program Files (x86)\Microsoft SQL Server\110\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugd6b170e4-27ad-4832-a319-32a1c2eaf1f3/d417b5a3-c251-44ae-a62e-194b4caad849&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Settings.get_Default():SC_665d5be74a45405e9983c575e3fd516f.Properties.Sett" +
    "ings")]

namespace SC_665d5be74a45405e9983c575e3fd516f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_665d5be74a45405e9983c575e3fd516f</msb:CodeName>
		<msb:DisplayName>SC_665d5be74a45405e9983c575e3fd516f</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{2B633D27-AB5B-4BB3-AA5E-1CEA45F9BB49}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_665d5be74a45405e9983c575e3fd516f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_665d5be74a45405e9983c575e3fd516f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_665d5be74a45405e9983c575e3fd516f")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_665d5be74a45405e9983c575e3fd516f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_C42D0A0D53C44DA4B4A398A3D3586783.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF8k/lEAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAArjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGA6AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
OgAAAAAAAEgAAAACAAUAOCQAACgWAAABAAAAAAAAAIAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMSAAAGfQEAAAQCAnMUAAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvEAAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzCgAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
BioeAigRAAAKKh4CKBIAAAoqABswBwBQAQAAAgAAERYKcxMAAAoLBwJ7AQAABG8TAAAGbxQAAApv
FQAACgdvFgAACi0hFwwCKBcAAAoWcg8AAHByMQAAcHJpAABwFhICbxgAAAoqBxdvGQAACgdvGgAA
CgdvGwAACm8cAAAKbx0AAAoNAigXAAAKFnJrAABwcoEAAHAJbx4AAApvHwAAChMFEgUoIAAACnKX
AABwKCEAAApyaQAAcBYSAG8iAAAKCW8jAAAKcq8AAHBvJAAACiYJbyUAAApyuwAAcG8mAAAKJglv
HgAACm8nAAAKEwYrXREGbygAAAp0JgAAARMEAigXAAAKFnJrAABwEQRvKQAACnJpAABwFhIAbyIA
AAoCewMAAARvDwAABgJ7AwAABBEEbykAAApvCwAABgJ7AwAABBEEbyoAAApvDQAABhEGbysAAAot
mt4VEQZ1KAAAARMHEQcsBxEHbywAAArcKgEQAAACANAAajoBFQAAAAAeAigBAAAGKioCAwQFKC0A
AAoqJgIWAyguAAAKKloDLAgCFigvAAAKKnLLAABwczAAAAp6JgIXAyguAAAKKloDLAgCFygvAAAK
KnLLAABwczAAAAp6HgIoMQAACioeAigyAAAKKh4CKDMAAAoqOgIoNAAACgIDfQQAAAQqggJ7BAAA
BG8XAAAKbzUAAApyaAEAcG82AAAKbzcAAAoqOgIoNAAACgIDfQUAAAQqHgIoNAAACioTMAIALQAA
AAMAABF+BgAABC0gcoABAHDQBwAAAig5AAAKbzoAAApzOwAACgoGgAYAAAR+BgAABCoafgcAAAQq
HgKABwAABCoafggAAAQqLnMaAAAGgAgAAAQqHgIoPgAACioAAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBwAAI34AAHQHAACcCgAAI1N0cmluZ3MA
AAAAEBIAAPQBAAAjVVMABBQAABAAAAAjR1VJRAAAABQUAAAUAgAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPolMwAWAAABAAAAMgAAAAgAAAAIAAAAGwAAAA4AAAA+AAAADwAAAAMAAAAEAAAACAAA
AAkAAAABAAAACAAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgCYAc0A
BgCnAc0AFgD9AtUCCgBDAzIDCgB0A18DCgBRBDcECgB8BGoECgCTBGoECgCwBGoECgDPBGoECgDo
BGoECgABBWoECgAcBWoECgA3BWoECgBQBWoECgCJBWkFCgCpBWkFBgAIBs0AGgBKBi8GHgDJBqAG
GgARBy8GGgAyBy8GGgBgBy8GGgByBy8GGgCVBy8GCgC4BxQBCgDHBxQBGgDlBy8GGgD+By8GGgAD
CC8GGgAwCC8GIgBdCEoICgBdCEoIGgCDCC8GGgCNCC8GCgC1CBQBCgDaCBQBHgD0CKAGHgA3CaAG
CgCUCYEJCgCxCRQBCgC2CRQBCgDaCWoEDgAGCvAJDgAfCvAJCgA0CmkFAAAAAAEAAAAAAAEAAQAB
ABAAMgAAAAUAAQABAAEAEABAAAAACAAEAAYAAQAQAEsAAAAJAAQACgABABAAWAAAAA0ABAASAAEA
EABkAAAADQAFABQAAAAQAG4AeAANAAYAFQAAARAApwB4ABEACAAZAAYAWAATAAYAZAAXAAYASwAf
AAEAogJPAAEAogJPABEAUwNjABEAgANnABEAxAOFAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgFVARsA
AQByIAAAAACBAGMBGwABAJAgAAAAAMYAtQEjAAEA5SAAAAAAxgHBARsABQDnIAAAAADGANUBGwAF
AO8gAAAAAMYA4AEbAAUA+CAAAAAAxgDBARsABQBkIgAAAACGGE8BGwAFAGwiAAAAAIYYTwEvAAUA
dyIAAAAAhgjsATkACACBIgAAAACGCP4BPgAJAJgiAAAAAIYIFwI5AAoAoiIAAAAAhggnAj4ACwC5
IgAAAACGAD4CGwAMAMEiAAAAAIYARQIbAAwAySIAAAAAhgBUAkMADADRIgAAAACGGE8BUwAMAOAi
AAAAAIYIFgNZAA0AASMAAAAAhhhPAVMADQAQIwAAAACDGE8BGwAOABgjAAAAAJMIkANrAA4AUSMA
AAAAkwikA3AADgBYIwAAAACTCLADdQAOAGAjAAAAAJYI1AOJAA8AcyMAAAAAhhhPARsADwBnIwAA
AACRGE8KWAEPAAAAAQDoAwAAAgDwAwAAAwD6AwAABAACBAAAAQAMBAAAAgATBAAAAwACBAAAAQAn
BAAAAQAnBAAAAQAnBAAAAQAnBAAAAQAtBAAAAQAtBAAAAQAnBFEATwE5AFkATwE5AGEATwE5AGkA
TwE5AHEATwE5AHkATwE5AIEATwE5AIkATwE5AJEATwE5AJkATwE5AKEATwGTAKkATwEbAAkATwEb
AAkA6wWYAAkA9wWfALEATwEbAAkA1QEbAAkA4AEbALkATwEbADkAUQauALkAZgY5ALkAbgZDAAkA
4gayAMEA+Aa3ALkAAgc+ALkAJAfCALkAQQfHANEAVAeuAMkAaQfMANkAhgfSAOkArgfXAPEAvgeu
APkAzgfbAMEA1Qe3ANkA9AfiAAEBaQfoANkAHAjvABEBPwj1AOkAaQj8ACkBdwgCATkBnAiuADkB
pQiuACkBrAhDAEEBwQgbABEATwEvABEAyQgZAREA0giTAEkBTwE5ABEAPgIbABEARQIbABEAVAJD
ABkATwEbAMEAFwkfAVEBUAklAVkBawlZAGEBTwEbAGkByAksAWkB4wk1AUEATwE7AYEBTwFIAZEB
TwEbACEATwEbAC4AGwDNAS4AYwDzAS4ACwBcAS4AEwCkAS4AIwDNAS4AKwDNAS4AMwCkAS4AOwDT
AS4AQwDNAS4AWwDqAWMAgwCpAMkA4wFPAeMAwwGpAOkA4wFPAQEB6wGpAKUABgFDAQQAAQAFAAUA
BwAGAAgACAAAAGACRwAAAG4CSwAAAIMCRwAAAI8CSwAAACYDXgAAAEMDewAAALwDgAAAAOADjgAB
AAsAAwABAAwABQABAA0ABwABAA4ACQACABMACwACABYADQACABcADwABABgADwACABkAEQAEgAAA
AQAAAGQTf1MAAAAAAADHBQAACwAAAAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAA
AAQAAAAAAAAAAAAAAAoAFAEAAAAACwAAAAAAAAAAAAAAAQB3AQAAAAALAAAAAAAAAAAAAAABALIC
AAAAAAsAAAAAAAAAAAAAAAEALwYAAAAACwAAAAAAAAAAAAAAAQB8BgAAAAACAAAAAAAAAAAAAAAK
AAsBAAAAAAAAAAABAAAAVgoAAAAAAAAAPE1vZHVsZT4AU0NfQzQyRDBBMEQ1M0M0NERBNEI0QTM5
OEEzRDM1ODY3ODMuZGxsAFVzZXJDb21wb25lbnQAU2NyaXB0TWFpbgBPdXREaW1CdWZmZXIAQ29u
bmVjdGlvbnMAVmFyaWFibGVzAFJlc291cmNlcwBTQ182NjVkNWJlNzRhNDU0MDVlOTk4M2M1NzVl
M2ZkNTE2Zi5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1
ZmZlcgBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAC5jdG9yAEZpbmlzaE91dHB1dHMATWFya091dHB1dHNGaW5pc2hlZABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1l
TWFwAFByaW1lT3V0cHV0AENyZWF0ZU5ld091dHB1dFJvd3MAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBzZXRfRGltZW5zaW9uTmFtZQBzZXRfRGltZW5zaW9uTmFtZV9Jc051bGwAc2V0X0RpbWVuc2lv
bklEAHNldF9EaW1lbnNpb25JRF9Jc051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AEVuZE9mUm93
c2V0AERpbWVuc2lvbk5hbWUARGltZW5zaW9uTmFtZV9Jc051bGwARGltZW5zaW9uSUQARGltZW5z
aW9uSURfSXNOdWxsAFBhcmVudENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRp
bWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVj
dGlvbk1hbmFnZXIxMDAAZ2V0X1Byb2Nlc3NDdWJlAFByb2Nlc3NDdWJlAFN5c3RlbS5SZXNvdXJj
ZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1
cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAT3V0
cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBPdXRwdXRNYXAAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1
bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19DNDJEMEEwRDUzQzQ0REE0QjRBMzk4QTNEMzU4Njc4MwBH
ZXRPdXRwdXRJRABHZXRDb2x1bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzAFNlcnZlcgBnZXRfQ29ubmVjdGlv
blN0cmluZwBDb25uZWN0AGdldF9Db25uZWN0ZWQATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29t
cG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEZpcmVFcnJvcgBzZXRfQ2Fw
dHVyZVhtbABEYXRhYmFzZUNvbGxlY3Rpb24AZ2V0X0RhdGFiYXNlcwBDb25uZWN0aW9uSW5mbwBn
ZXRfQ29ubmVjdGlvbkluZm8AZ2V0X0NhdGFsb2cARGF0YWJhc2UAZ2V0X0l0ZW0ARGltZW5zaW9u
Q29sbGVjdGlvbgBnZXRfRGltZW5zaW9ucwBNb2RlbENvbXBvbmVudENvbGxlY3Rpb24AZ2V0X0Nv
dW50AEludDMyAFRvU3RyaW5nAFN0cmluZwBDb25jYXQARmlyZUluZm9ybWF0aW9uAEN1YmVDb2xs
ZWN0aW9uAGdldF9DdWJlcwBDdWJlAERhdGFTb3VyY2VWaWV3Q29sbGVjdGlvbgBnZXRfRGF0YVNv
dXJjZVZpZXdzAERhdGFTb3VyY2VWaWV3AEZpbmRCeU5hbWUAU3lzdGVtLkNvbGxlY3Rpb25zAElF
bnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQARGltZW5zaW9uAE5hbWVkQ29tcG9u
ZW50AGdldF9OYW1lAGdldF9JRABNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAHNldF9JdGVt
AFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBJRFRTUnVudGltZUNvbm5lY3Rpb25D
b2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24ASURUU1J1bnRpbWVD
b25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdldF9Db25uZWN0aW9uTWFu
YWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ182NjVkNWJl
NzRhNDU0MDVlOTk4M2M1NzVlM2ZkNTE2Zi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AAAAAA1PAHUAdABEAGkAbQAAIWMAbwBuAG4AZQBjAHQAaQBvAG4AIABlAHIAcgBvAHIAADdDAG8A
dQBsAGQAIABuAG8AdAAgAGMAbwBuAG4AZQBjAHQAIAB0AG8AIABzAGUAcgB2AGUAcgAAAQAVRABp
AG0AZQBuAHMAaQBvAG4AcwAAFVIAZQB0AHIAaQBlAHYAZQBkACAAABcgAGQAaQBtAGUAbgBzAGkA
bwBuAHMAAAtNAG8AZABlAGwAAA9TAGEAbgBkAGIAbwB4AACAm0kAcwBOAHUAbABsACAAcAByAG8A
cABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAu
ACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0A
bgAgAGkAbgBzAHQAZQBhAGQALgAAF1AAcgBvAGMAZQBzAHMAQwB1AGIAZQAAcVMAQwBfADYANgA1
AGQANQBiAGUANwA0AGEANAA1ADQAMAA1AGUAOQA5ADgAMwBjADUANwA1AGUAMwBmAGQANQAxADYA
ZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABCosFg49+pQ5lN
YMCG5W1GAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQMGEhALIAQBCB0IHRIVEhkJIAMB
EhUdCBIZBCABAQ4EIAEBAgMgAAIDKAAOAygAAgMGEgUFIAEBEgUEIAASHQQoABIdAwYSIQMGEiUE
AAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEiAEAAASIAQIABIgBCABAQgGAAIIEhkOBSABHQgI
AwcBCAQBAAAAAyAADgQgABJhCiAGAQgODg4IEAIEIAASZQQgABJpBSABEm0OBCAAEnEDIAAIBgAD
Dg4ODgUgABKAgQYgARKAhQ4FIAASgIkGIAESgI0OBSAAEoCRAyAAHBIHCAISXQISbRKAmQgSgJUS
gKEFIAIBCBwFIAASgKkGIAESgK0OCAABEoC1EYC5BSAAEoC9ByACAQ4SgL0EBwESIQYgAQERgMUI
AQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzY2NWQ1YmU3NGE0NTQwNWU5OTgzYzU3
NWUzZmQ1MTZmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAIg6AAAAAAAAAAAAAJ46AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACQOgAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQB/U2QTAAABAH9TZBM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAA
NABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANgA2
ADUAZAA1AGIAZQA3ADQAYQA0ADUANAAwADUAZQA5ADkAOAAzAGMANQA3ADUAZQAzAGYAZAA1ADEA
NgBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADQAOQA2ADQALgAy
ADEAMwA3ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AQwA0ADIA
RAAwAEEAMABEADUAMwBDADQANABEAEEANABCADQAQQAzADkAOABBADMARAAzADUAOAA2ADcAOAAz
AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIAAgADIAMAAxADMAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBDAF8AQwA0ADIARAAwAEEAMABEADUAMwBDADQANABEAEEANABCADQAQQAzADkA
OABBADMARAAzADUAOAA2ADcAOAAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAQwBfADYANgA1AGQANQBiAGUANwA0AGEANAA1ADQAMAA1AGUAOQA5ADgAMwBjADUA
NwA1AGUAMwBmAGQANQAxADYAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANAA5ADYANAAuADIAMQAzADcANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANAA5ADYANAAuADIAMQAzADcANQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACwOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_c42d0a0d53c44da4b4a398a3d3586783</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">68a3b3919f8f7cdc8f99366809ed2799</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Connections[ProcessCube]"
                      connectionManagerID="{EEA8197D-CCF1-4351-9021-782C38D99ADB}:external"
                      connectionManagerRefId="Project.ConnectionManagers[ProcessCube]"
                      description="ProcessCube"
                      name="ProcessCube" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim]"
                      hasSideEffects="true"
                      name="OutDim">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim].Columns[DimensionName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim].Columns[DimensionName]"
                          name="DimensionName" />
                        <outputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim].Columns[DimensionID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim].Columns[DimensionID]"
                          name="DimensionID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName.Paths[Lookup Match Output]"
                  endId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrProcessTable.Inputs[Input 0]"
                  name="Lookup Match Output"
                  startId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName.Paths[OutDim]"
                  endId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims.Inputs[Lookup Input]"
                  name="OutDim"
                  startId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList.Outputs[OutDim]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{0FF41E23-D58A-43E9-8150-E756E876ECDE}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT_PopulateCache"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList"
                  componentClassID="{BF818E79-2C1C-410D-ADEA-B2D1A04FED01}"
                  contactInfo="Cache Transform;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Writes data to a cache (a .caw file) with the Cache Connection Manager. Reuse the cache between multiple Lookup transforms to reduce database load. Share the cache to reduce memory usage. Note: cache data is stored in clear text and not recommended for sensitive data."
                  name="cacheDimensionList"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[cacheDimensionList]"
                      connectionManagerRefId="Package.ConnectionManagers[cacheDimensionList]"
                      description="The connection used to access the cache."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList.Inputs[Cache Input]"
                      hasSideEffects="true"
                      name="Cache Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList.Inputs[Cache Input].Columns[DimensionName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DimensionName"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim].Columns[DimensionName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">DimensionName</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList.Inputs[Cache Input].Columns[DimensionID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DimensionID"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim].Columns[DimensionID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">DimensionID</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList.Outputs[Cache Output]"
                      name="Cache Output"
                      synchronousInputId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList.Inputs[Cache Input]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="scrSrc_TableList"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using AMO = Microsoft.AnalysisServices;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        //NOTE: Aliasing AMO for Microsoft.AnalysisServices;
        bool fireAgain = false;
        AMO.Server server = new AMO.Server();
        server.Connect(this.Connections.ProcessCube.ConnectionString);

        if (!server.Connected)
        {
            bool cancel = true;
            ComponentMetaData.FireError(0, "connection error", "Could not connect to server", "", 0, out cancel);
            return;
        }

        server.CaptureXml = true;

        AMO.Database db = server.Databases[server.ConnectionInfo.Catalog];
        ComponentMetaData.FireInformation(0, "Dimensions", "Retrieved " + db.Dimensions.Count.ToString() + " dimensions", "", 0, ref fireAgain);

        AMO.Cube cube = db.Cubes["Model"];
        AMO.DataSourceView dsv = db.DataSourceViews.FindByName("Sandbox");

        foreach (AMO.Dimension dim in db.Dimensions)
        {
            ComponentMetaData.FireInformation(0, "Dimensions", dim.Name, "", 0, ref fireAgain);

            OutDimBuffer.AddRow();
            OutDimBuffer.DimensionName = dim.Name;
            OutDimBuffer.DimensionID = dim.ID;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutDimBuffer: ScriptBuffer

{
    public OutDimBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DimensionName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DimensionName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DimensionID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DimensionID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutDimBuffer OutDimBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutDimBuffer)
        {
            OutDimBuffer.SetEndOfRowset();
            OutDimBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"OutDim"))
            {
                OutDimBuffer = new OutDimBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ProcessCube
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProcessCube").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_665d5be74a45405e9983c575e3fd516f.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B72379BB-30F9-467F-85BB-4C9F206191DF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_665d5be74a45405e9983c575e3fd516f</RootNamespace>
    <AssemblyName>SC_665d5be74a45405e9983c575e3fd516f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft SQL Server\110\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugd6b170e4-27ad-4832-a319-32a1c2eaf1f3/d417b5a3-c251-44ae-a62e-194b4caad849&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Settings.get_Default():SC_665d5be74a45405e9983c575e3fd516f.Properties.Sett" +
    "ings")]

namespace SC_665d5be74a45405e9983c575e3fd516f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_665d5be74a45405e9983c575e3fd516f</msb:CodeName>
		<msb:DisplayName>SC_665d5be74a45405e9983c575e3fd516f</msb:DisplayName>
		<msb:ProjectId>{2B633D27-AB5B-4BB3-AA5E-1CEA45F9BB49}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_665d5be74a45405e9983c575e3fd516f.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_665d5be74a45405e9983c575e3fd516f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_665d5be74a45405e9983c575e3fd516f")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_665d5be74a45405e9983c575e3fd516f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_665d5be74a45405e9983c575e3fd516f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_665d5be74a45405e9983c575e3fd516f.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL4j/lEAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAArjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGA6AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
OgAAAAAAAEgAAAACAAUAOCQAACgWAAABAAAAAAAAAIAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMSAAAGfQEAAAQCAnMUAAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvEAAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzCgAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
BioeAigRAAAKKh4CKBIAAAoqABswBwBQAQAAAgAAERYKcxMAAAoLBwJ7AQAABG8TAAAGbxQAAApv
FQAACgdvFgAACi0hFwwCKBcAAAoWcg8AAHByMQAAcHJpAABwFhICbxgAAAoqBxdvGQAACgdvGgAA
CgdvGwAACm8cAAAKbx0AAAoNAigXAAAKFnJrAABwcoEAAHAJbx4AAApvHwAAChMFEgUoIAAACnKX
AABwKCEAAApyaQAAcBYSAG8iAAAKCW8jAAAKcq8AAHBvJAAACiYJbyUAAApyuwAAcG8mAAAKJglv
HgAACm8nAAAKEwYrXREGbygAAAp0JgAAARMEAigXAAAKFnJrAABwEQRvKQAACnJpAABwFhIAbyIA
AAoCewMAAARvDwAABgJ7AwAABBEEbykAAApvCwAABgJ7AwAABBEEbyoAAApvDQAABhEGbysAAAot
mt4VEQZ1KAAAARMHEQcsBxEHbywAAArcKgEQAAACANAAajoBFQAAAAAeAigBAAAGKioCAwQFKC0A
AAoqJgIWAyguAAAKKloDLAgCFigvAAAKKnLLAABwczAAAAp6JgIXAyguAAAKKloDLAgCFygvAAAK
KnLLAABwczAAAAp6HgIoMQAACioeAigyAAAKKh4CKDMAAAoqOgIoNAAACgIDfQQAAAQqggJ7BAAA
BG8XAAAKbzUAAApyaAEAcG82AAAKbzcAAAoqOgIoNAAACgIDfQUAAAQqHgIoNAAACioTMAIALQAA
AAMAABF+BgAABC0gcoABAHDQBwAAAig5AAAKbzoAAApzOwAACgoGgAYAAAR+BgAABCoafgcAAAQq
HgKABwAABCoafggAAAQqLnMaAAAGgAgAAAQqHgIoPgAACioAAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBwAAI34AAHQHAACcCgAAI1N0cmluZ3MA
AAAAEBIAAPQBAAAjVVMABBQAABAAAAAjR1VJRAAAABQUAAAUAgAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPolMwAWAAABAAAAMgAAAAgAAAAIAAAAGwAAAA4AAAA+AAAADwAAAAMAAAAEAAAACAAA
AAkAAAABAAAACAAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgCYAc0A
BgCnAc0AFgD9AtUCCgBDAzIDCgB0A18DCgBRBDcECgB8BGoECgCTBGoECgCwBGoECgDPBGoECgDo
BGoECgABBWoECgAcBWoECgA3BWoECgBQBWoECgCJBWkFCgCpBWkFBgAIBs0AGgBKBi8GHgDJBqAG
GgARBy8GGgAyBy8GGgBgBy8GGgByBy8GGgCVBy8GCgC4BxQBCgDHBxQBGgDlBy8GGgD+By8GGgAD
CC8GGgAwCC8GIgBdCEoICgBdCEoIGgCDCC8GGgCNCC8GCgC1CBQBCgDaCBQBHgD0CKAGHgA3CaAG
CgCUCYEJCgCxCRQBCgC2CRQBCgDaCWoEDgAGCvAJDgAfCvAJCgA0CmkFAAAAAAEAAAAAAAEAAQAB
ABAAMgAAAAUAAQABAAEAEABAAAAACAAEAAYAAQAQAEsAAAAJAAQACgABABAAWAAAAA0ABAASAAEA
EABkAAAADQAFABQAAAAQAG4AeAANAAYAFQAAARAApwB4ABEACAAZAAYAWAATAAYAZAAXAAYASwAf
AAEAogJPAAEAogJPABEAUwNjABEAgANnABEAxAOFAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgFVARsA
AQByIAAAAACBAGMBGwABAJAgAAAAAMYAtQEjAAEA5SAAAAAAxgHBARsABQDnIAAAAADGANUBGwAF
AO8gAAAAAMYA4AEbAAUA+CAAAAAAxgDBARsABQBkIgAAAACGGE8BGwAFAGwiAAAAAIYYTwEvAAUA
dyIAAAAAhgjsATkACACBIgAAAACGCP4BPgAJAJgiAAAAAIYIFwI5AAoAoiIAAAAAhggnAj4ACwC5
IgAAAACGAD4CGwAMAMEiAAAAAIYARQIbAAwAySIAAAAAhgBUAkMADADRIgAAAACGGE8BUwAMAOAi
AAAAAIYIFgNZAA0AASMAAAAAhhhPAVMADQAQIwAAAACDGE8BGwAOABgjAAAAAJMIkANrAA4AUSMA
AAAAkwikA3AADgBYIwAAAACTCLADdQAOAGAjAAAAAJYI1AOJAA8AcyMAAAAAhhhPARsADwBnIwAA
AACRGE8KWAEPAAAAAQDoAwAAAgDwAwAAAwD6AwAABAACBAAAAQAMBAAAAgATBAAAAwACBAAAAQAn
BAAAAQAnBAAAAQAnBAAAAQAnBAAAAQAtBAAAAQAtBAAAAQAnBFEATwE5AFkATwE5AGEATwE5AGkA
TwE5AHEATwE5AHkATwE5AIEATwE5AIkATwE5AJEATwE5AJkATwE5AKEATwGTAKkATwEbAAkATwEb
AAkA6wWYAAkA9wWfALEATwEbAAkA1QEbAAkA4AEbALkATwEbADkAUQauALkAZgY5ALkAbgZDAAkA
4gayAMEA+Aa3ALkAAgc+ALkAJAfCALkAQQfHANEAVAeuAMkAaQfMANkAhgfSAOkArgfXAPEAvgeu
APkAzgfbAMEA1Qe3ANkA9AfiAAEBaQfoANkAHAjvABEBPwj1AOkAaQj8ACkBdwgCATkBnAiuADkB
pQiuACkBrAhDAEEBwQgbABEATwEvABEAyQgZAREA0giTAEkBTwE5ABEAPgIbABEARQIbABEAVAJD
ABkATwEbAMEAFwkfAVEBUAklAVkBawlZAGEBTwEbAGkByAksAWkB4wk1AUEATwE7AYEBTwFIAZEB
TwEbACEATwEbAC4AGwDNAS4AYwDzAS4ACwBcAS4AEwCkAS4AIwDNAS4AKwDNAS4AMwCkAS4AOwDT
AS4AQwDNAS4AWwDqAWMAgwCpAMkA4wFPAeMAwwGpAOkA4wFPAQEB6wGpAKUABgFDAQQAAQAFAAUA
BwAGAAgACAAAAGACRwAAAG4CSwAAAIMCRwAAAI8CSwAAACYDXgAAAEMDewAAALwDgAAAAOADjgAB
AAsAAwABAAwABQABAA0ABwABAA4ACQACABMACwACABYADQACABcADwABABgADwACABkAEQAEgAAA
AQAAAGQTL1MAAAAAAADHBQAACwAAAAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAA
AAQAAAAAAAAAAAAAAAoAFAEAAAAACwAAAAAAAAAAAAAAAQB3AQAAAAALAAAAAAAAAAAAAAABALIC
AAAAAAsAAAAAAAAAAAAAAAEALwYAAAAACwAAAAAAAAAAAAAAAQB8BgAAAAACAAAAAAAAAAAAAAAK
AAsBAAAAAAAAAAABAAAAVgoAAAAAAAAAPE1vZHVsZT4AU0NfNjY1ZDViZTc0YTQ1NDA1ZTk5ODNj
NTc1ZTNmZDUxNmYuZGxsAFVzZXJDb21wb25lbnQAU2NyaXB0TWFpbgBPdXREaW1CdWZmZXIAQ29u
bmVjdGlvbnMAVmFyaWFibGVzAFJlc291cmNlcwBTQ182NjVkNWJlNzRhNDU0MDVlOTk4M2M1NzVl
M2ZkNTE2Zi5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1
ZmZlcgBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAC5jdG9yAEZpbmlzaE91dHB1dHMATWFya091dHB1dHNGaW5pc2hlZABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1l
TWFwAFByaW1lT3V0cHV0AENyZWF0ZU5ld091dHB1dFJvd3MAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBzZXRfRGltZW5zaW9uTmFtZQBzZXRfRGltZW5zaW9uTmFtZV9Jc051bGwAc2V0X0RpbWVuc2lv
bklEAHNldF9EaW1lbnNpb25JRF9Jc051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AEVuZE9mUm93
c2V0AERpbWVuc2lvbk5hbWUARGltZW5zaW9uTmFtZV9Jc051bGwARGltZW5zaW9uSUQARGltZW5z
aW9uSURfSXNOdWxsAFBhcmVudENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRp
bWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVj
dGlvbk1hbmFnZXIxMDAAZ2V0X1Byb2Nlc3NDdWJlAFByb2Nlc3NDdWJlAFN5c3RlbS5SZXNvdXJj
ZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1
cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAT3V0
cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBPdXRwdXRNYXAAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1
bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ182NjVkNWJlNzRhNDU0MDVlOTk4M2M1NzVlM2ZkNTE2ZgBH
ZXRPdXRwdXRJRABHZXRDb2x1bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzAFNlcnZlcgBnZXRfQ29ubmVjdGlv
blN0cmluZwBDb25uZWN0AGdldF9Db25uZWN0ZWQATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29t
cG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEZpcmVFcnJvcgBzZXRfQ2Fw
dHVyZVhtbABEYXRhYmFzZUNvbGxlY3Rpb24AZ2V0X0RhdGFiYXNlcwBDb25uZWN0aW9uSW5mbwBn
ZXRfQ29ubmVjdGlvbkluZm8AZ2V0X0NhdGFsb2cARGF0YWJhc2UAZ2V0X0l0ZW0ARGltZW5zaW9u
Q29sbGVjdGlvbgBnZXRfRGltZW5zaW9ucwBNb2RlbENvbXBvbmVudENvbGxlY3Rpb24AZ2V0X0Nv
dW50AEludDMyAFRvU3RyaW5nAFN0cmluZwBDb25jYXQARmlyZUluZm9ybWF0aW9uAEN1YmVDb2xs
ZWN0aW9uAGdldF9DdWJlcwBDdWJlAERhdGFTb3VyY2VWaWV3Q29sbGVjdGlvbgBnZXRfRGF0YVNv
dXJjZVZpZXdzAERhdGFTb3VyY2VWaWV3AEZpbmRCeU5hbWUAU3lzdGVtLkNvbGxlY3Rpb25zAElF
bnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQARGltZW5zaW9uAE5hbWVkQ29tcG9u
ZW50AGdldF9OYW1lAGdldF9JRABNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAHNldF9JdGVt
AFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBJRFRTUnVudGltZUNvbm5lY3Rpb25D
b2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24ASURUU1J1bnRpbWVD
b25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdldF9Db25uZWN0aW9uTWFu
YWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ182NjVkNWJl
NzRhNDU0MDVlOTk4M2M1NzVlM2ZkNTE2Zi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AAAAAA1PAHUAdABEAGkAbQAAIWMAbwBuAG4AZQBjAHQAaQBvAG4AIABlAHIAcgBvAHIAADdDAG8A
dQBsAGQAIABuAG8AdAAgAGMAbwBuAG4AZQBjAHQAIAB0AG8AIABzAGUAcgB2AGUAcgAAAQAVRABp
AG0AZQBuAHMAaQBvAG4AcwAAFVIAZQB0AHIAaQBlAHYAZQBkACAAABcgAGQAaQBtAGUAbgBzAGkA
bwBuAHMAAAtNAG8AZABlAGwAAA9TAGEAbgBkAGIAbwB4AACAm0kAcwBOAHUAbABsACAAcAByAG8A
cABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAu
ACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0A
bgAgAGkAbgBzAHQAZQBhAGQALgAAF1AAcgBvAGMAZQBzAHMAQwB1AGIAZQAAcVMAQwBfADYANgA1
AGQANQBiAGUANwA0AGEANAA1ADQAMAA1AGUAOQA5ADgAMwBjADUANwA1AGUAMwBmAGQANQAxADYA
ZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABwKbnOrAdoTrVG
nWotKHAMAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQMGEhALIAQBCB0IHRIVEhkJIAMB
EhUdCBIZBCABAQ4EIAEBAgMgAAIDKAAOAygAAgMGEgUFIAEBEgUEIAASHQQoABIdAwYSIQMGEiUE
AAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEiAEAAASIAQIABIgBCABAQgGAAIIEhkOBSABHQgI
AwcBCAQBAAAAAyAADgQgABJhCiAGAQgODg4IEAIEIAASZQQgABJpBSABEm0OBCAAEnEDIAAIBgAD
Dg4ODgUgABKAgQYgARKAhQ4FIAASgIkGIAESgI0OBSAAEoCRAyAAHBIHCAISXQISbRKAmQgSgJUS
gKEFIAIBCBwFIAASgKkGIAESgK0OCAABEoC1EYC5BSAAEoC9ByACAQ4SgL0EBwESIQYgAQERgMUI
AQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzY2NWQ1YmU3NGE0NTQwNWU5OTgzYzU3
NWUzZmQ1MTZmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAIg6AAAAAAAAAAAAAJ46AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACQOgAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAvU2QTAAABAC9TZBM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAA
NABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANgA2
ADUAZAA1AGIAZQA3ADQAYQA0ADUANAAwADUAZQA5ADkAOAAzAGMANQA3ADUAZQAzAGYAZAA1ADEA
NgBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADQAOQA2ADQALgAy
ADEAMgA5ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANgA2ADUA
ZAA1AGIAZQA3ADQAYQA0ADUANAAwADUAZQA5ADkAOAAzAGMANQA3ADUAZQAzAGYAZAA1ADEANgBm
AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIAAgADIAMAAxADMAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBDAF8ANgA2ADUAZAA1AGIAZQA3ADQAYQA0ADUANAAwADUAZQA5ADkAOAAzAGMA
NQA3ADUAZQAzAGYAZAA1ADEANgBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAQwBfADYANgA1AGQANQBiAGUANwA0AGEANAA1ADQAMAA1AGUAOQA5ADgAMwBjADUA
NwA1AGUAMwBmAGQANQAxADYAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANAA5ADYANAAuADIAMQAyADkANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANAA5ADYANAAuADIAMQAyADkANQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACwOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_665d5be74a45405e9983c575e3fd516f</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">68a3b3919f8f7cdc8f99366809ed2799</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Connections[ProcessCube]"
                      connectionManagerID="{EEA8197D-CCF1-4351-9021-782C38D99ADB}:external"
                      connectionManagerRefId="Project.ConnectionManagers[ProcessCube]"
                      description="ProcessCube"
                      name="ProcessCube" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim]"
                      hasSideEffects="true"
                      name="OutDim">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim].Columns[DimensionName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim].Columns[DimensionName]"
                          name="DimensionName" />
                        <outputColumn
                          refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim].Columns[DimensionID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim].Columns[DimensionID]"
                          name="DimensionID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache.Paths[OutDim]"
                  endId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList.Inputs[Cache Input]"
                  name="OutDim"
                  startId="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList.Outputs[OutDim]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ_UseDimsInALookup.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AFC2E687-DFE6-4BE8-B061-D28F8BECE377}"
          DTS:From="Package\SEQ_UseDimsInALookup\DFT_PopulateCache"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{173A95CC-1305-49F6-BE1E-1E9C4C82AE8A}"
      DTS:From="Package\SEQ_ReadDims"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\SEQ_UseDimsInALookup" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\SEQ_UseDimsInALookup\DFT_PopulateCache"
          TopLeft="69.1428675770491,45.803922884192" />
        <NodeLayout
          Size="224,41.6"
          Id="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName"
          TopLeft="65.5873118701167,138.248368625135" />
        <EdgeLayout
          Id="Package\SEQ_UseDimsInALookup.PrecedenceConstraints[Constraint]"
          TopLeft="155.542867577049,87.403922884192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.0444442930675,50.844445740943"
              Start="0,0"
              End="22.0444442930675,43.344445740943">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.4222228704715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.4222228704715"
                    Point2="0,25.4222228704715"
                    Point3="4,25.4222228704715" />
                  <mssgle:LineSegment
                    End="18.0444442930675,25.4222228704715" />
                  <mssgle:CubicBezierSegment
                    Point1="18.0444442930675,25.4222228704715"
                    Point2="22.0444442930675,25.4222228704715"
                    Point3="22.0444442930675,29.4222228704715" />
                  <mssgle:LineSegment
                    End="22.0444442930675,43.344445740943" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="294.4,205.6"
          Size="294.4,248.8"
          Id="Package\SEQ_UseDimsInALookup"
          TopLeft="1469.96827879541,313.254244909081" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\SEQ_ReadDims\scrListOfTables"
          TopLeft="86.2857147333573,60" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="252,168.8"
          Size="252,212"
          Id="Package\SEQ_ReadDims\FLC_DoWorkOnEachTable"
          TopLeft="63.8095238743996,152.376471883781" />
        <EdgeLayout
          Id="Package\SEQ_ReadDims.PrecedenceConstraints[Constraint]"
          TopLeft="161.485714733357,101.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.3238091410423,50.7764718837805"
              Start="0,0"
              End="28.3238091410423,43.2764718837805">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.3882359418903" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.3882359418903"
                    Point2="0,25.3882359418903"
                    Point3="4,25.3882359418903" />
                  <mssgle:LineSegment
                    End="24.3238091410423,25.3882359418903" />
                  <mssgle:CubicBezierSegment
                    Point1="24.3238091410423,25.3882359418903"
                    Point2="28.3238091410423,25.3882359418903"
                    Point3="28.3238091410423,29.3882359418903" />
                  <mssgle:LineSegment
                    End="28.3238091410423,43.2764718837805" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="requires the cube connection to&#xA;be named &quot;ProcessCube&quot;&#xA;Writes the result to &#xA;objTableList&#xA;"
          ParentId="Package\SEQ_ReadDims"
          FontInfo="{assembly:Null}"
          Size="213.6,104"
          Id="e82699a2-2881-45ee-bfd5-2c5fb0693968"
          TopLeft="262.457145153746,50.7764682373787" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="478.4,419.2"
          Size="478.4,462.4"
          Id="Package\SEQ_ReadDims"
          TopLeft="912.314298277485,182.39738489378" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1390.71429827749,413.59738489378">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79.2539805179276,24.0568600153015"
              Start="0,0"
              End="71.7539805179276,24.0568600153015">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="35.6269902589638,0" />
                  <mssgle:CubicBezierSegment
                    Point1="35.6269902589638,0"
                    Point2="39.6269902589638,0"
                    Point3="39.6269902589638,4" />
                  <mssgle:LineSegment
                    End="39.6269902589638,20.0568600153015" />
                  <mssgle:CubicBezierSegment
                    Point1="39.6269902589638,20.0568600153015"
                    Point2="39.6269902589638,24.0568600153015"
                    Point3="43.6269902589638,24.0568600153015" />
                  <mssgle:LineSegment
                    End="71.7539805179276,24.0568600153015" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="This second sequence is the more likely &#xD;&#xA;one you'll use"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="240.8,60"
          Id="edc138d2-f6eb-45ca-8881-10d1068018aa"
          TopLeft="1521.30613504415,240.336136365844" />
        <AnnotationLayout
          Text="basic sequence showing the script component"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="273.6,60"
          Id="0a313e4c-f53b-4668-9e11-b2f0cdac73db"
          TopLeft="1020.89796325695,154.689076341147" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\SEQ_UseDimsInALookup\DFT_PopulateCache">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\scrSrc_TableList"
          TopLeft="171.200002929143,92.8000013127047" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\SEQ_UseDimsInALookup\DFT_PopulateCache\cacheDimensionList"
          TopLeft="167.771431442183,174.164708336167" />
        <EdgeLayout
          Id="Package\SEQ_UseDimsInALookup\DFT_PopulateCache.Paths[OutDim]"
          TopLeft="251.085717185663,134.400001312705">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.7647070234622"
              Start="0,0"
              End="0,32.2647070234622">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.2647070234622" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrSrc_TableList"
          TopLeft="60,60" />
        <AnnotationLayout
          Text="This would typically be a list of dimensions&#xD;&#xA;that you want to process stored in a table."
          ParentId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName"
          FontInfo="{assembly:Null}"
          Size="253.6,60"
          Id="cba929c8-998c-4218-903a-ef539f5ab62d"
          TopLeft="318.4,71.2" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims"
          TopLeft="272,148.8" />
        <AnnotationLayout
          Text="The lookup to check for existence and to &#xD;&#xA;retrieve the ID&#xD;&#xA;"
          ParentId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName"
          FontInfo="{assembly:Null}"
          Size="247.2,72"
          Id="064e4549-aca3-47ad-8ebc-a3389d3f2530"
          TopLeft="517.6,165.6" />
        <EdgeLayout
          Id="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName.Paths[OutDim]"
          TopLeft="137.6,101.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209.6,47.2"
              Start="0,0"
              End="209.6,39.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.6" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.6"
                    Point2="0,23.6"
                    Point3="4,23.6" />
                  <mssgle:LineSegment
                    End="205.6,23.6" />
                  <mssgle:CubicBezierSegment
                    Point1="205.6,23.6"
                    Point2="209.6,23.6"
                    Point3="209.6,27.6" />
                  <mssgle:LineSegment
                    End="209.6,39.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\scrProcessTable"
          TopLeft="375.2,302.4" />
        <EdgeLayout
          Id="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName.Paths[Lookup Match Output]"
          TopLeft="347.2,190.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="104.8,112"
              Start="0,0"
              End="104.8,104.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52"
                    Point2="0,56"
                    Point3="4,56" />
                  <mssgle:LineSegment
                    End="100.8,56" />
                  <mssgle:CubicBezierSegment
                    Point1="100.8,56"
                    Point2="104.8,56"
                    Point3="104.8,60" />
                  <mssgle:LineSegment
                    End="104.8,104.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.20861328124997,61,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Code to process the tables. &#xD;&#xA;Can be either in serial or parallel&#xD;&#xA;, set by boolProcessParallel&#xD;&#xA;&#xD;&#xA;This process does a clear, then data, then recalc&#xD;&#xA;Clear reduces memory consumption at expense of &#xD;&#xA;not having data available during process, data then recalc&#xD;&#xA;speeds up processing"
          ParentId="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName"
          FontInfo="{assembly:Null}"
          Size="333.6,152"
          Id="618b5a95-b98c-4c34-abaf-4073c8749e88"
          TopLeft="574.4,287.2" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SEQ_UseDimsInALookup\DFT_GetDimensionID_byName\lkp_CacheDims">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>