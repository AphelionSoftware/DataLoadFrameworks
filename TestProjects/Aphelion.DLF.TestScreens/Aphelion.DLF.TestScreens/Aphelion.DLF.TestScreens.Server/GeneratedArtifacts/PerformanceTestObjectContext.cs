//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Run_Test", "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Test), "Run", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.Run), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RunStep_TestStep", "TestStep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.TestStep), "RunStep", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RunStep), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TestStep_DestDatabase", "Database", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Database), "TestStep", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TestStep), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TestStep_Package", "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Package), "TestStep", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TestStep), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TestStep_SrcDatabase", "Database", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Database), "TestStep", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TestStep), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TestStep_Test", "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Test), "TestStep", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TestStep), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PerformanceTest : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PerformanceTest object using the connection string found in the 'PerformanceTest' section of the application configuration file.
        /// </summary>
        public PerformanceTest() : base("name=PerformanceTest", "PerformanceTest")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PerformanceTest object.
        /// </summary>
        public PerformanceTest(string connectionString) : base(connectionString, "PerformanceTest")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PerformanceTest object.
        /// </summary>
        public PerformanceTest(EntityConnection connection) : base(connection, "PerformanceTest")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Database> Databases
        {
            get
            {
                if ((_Databases == null))
                {
                    _Databases = base.CreateObjectSet<Database>("Databases");
                }
                return _Databases;
            }
        }
        private ObjectSet<Database> _Databases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Package> Packages
        {
            get
            {
                if ((_Packages == null))
                {
                    _Packages = base.CreateObjectSet<Package>("Packages");
                }
                return _Packages;
            }
        }
        private ObjectSet<Package> _Packages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Run> Runs
        {
            get
            {
                if ((_Runs == null))
                {
                    _Runs = base.CreateObjectSet<Run>("Runs");
                }
                return _Runs;
            }
        }
        private ObjectSet<Run> _Runs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RunStep> RunSteps
        {
            get
            {
                if ((_RunSteps == null))
                {
                    _RunSteps = base.CreateObjectSet<RunStep>("RunSteps");
                }
                return _RunSteps;
            }
        }
        private ObjectSet<RunStep> _RunSteps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Test> Tests
        {
            get
            {
                if ((_Tests == null))
                {
                    _Tests = base.CreateObjectSet<Test>("Tests");
                }
                return _Tests;
            }
        }
        private ObjectSet<Test> _Tests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestStep> TestSteps
        {
            get
            {
                if ((_TestSteps == null))
                {
                    _TestSteps = base.CreateObjectSet<TestStep>("TestSteps");
                }
                return _TestSteps;
            }
        }
        private ObjectSet<TestStep> _TestSteps;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Databases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDatabases(Database database)
        {
            base.AddObject("Databases", database);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Packages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackages(Package package)
        {
            base.AddObject("Packages", package);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Runs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuns(Run run)
        {
            base.AddObject("Runs", run);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RunSteps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRunSteps(RunStep runStep)
        {
            base.AddObject("RunSteps", runStep);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTests(Test test)
        {
            base.AddObject("Tests", test);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestSteps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestSteps(TestStep testStep)
        {
            base.AddObject("TestSteps", testStep);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Database")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Database : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Database object.
        /// </summary>
        /// <param name="databaseID">Initial value of the DatabaseID property.</param>
        /// <param name="databaseName">Initial value of the DatabaseName property.</param>
        /// <param name="serverName">Initial value of the ServerName property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Database CreateDatabase(global::System.Int32 databaseID, global::System.String databaseName, global::System.String serverName, global::System.String username, global::System.String password)
        {
            Database database = new Database();
            database.DatabaseID = databaseID;
            database.DatabaseName = databaseName;
            database.ServerName = serverName;
            database.Username = username;
            database.Password = password;
            return database;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DatabaseID
        {
            get
            {
                return _DatabaseID;
            }
            set
            {
                if (_DatabaseID != value)
                {
                    OnDatabaseIDChanging(value);
                    ReportPropertyChanging("DatabaseID");
                    _DatabaseID = value;
                    ReportPropertyChanged("DatabaseID");
                    OnDatabaseIDChanged();
                }
            }
        }
        private global::System.Int32 _DatabaseID;
        partial void OnDatabaseIDChanging(global::System.Int32 value);
        partial void OnDatabaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DatabaseName
        {
            get
            {
                return _DatabaseName;
            }
            set
            {
                OnDatabaseNameChanging(value);
                ReportPropertyChanging("DatabaseName");
                _DatabaseName = value;
                ReportPropertyChanged("DatabaseName");
                OnDatabaseNameChanged();
            }
        }
        private global::System.String _DatabaseName;
        partial void OnDatabaseNameChanging(global::System.String value);
        partial void OnDatabaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = value;
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = value;
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = value;
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_DestDatabase", "TestStep")]
        public EntityCollection<TestStep> TestSteps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_DestDatabase", "TestStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_DestDatabase", "TestStep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_SrcDatabase", "TestStep")]
        public EntityCollection<TestStep> TestSteps1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_SrcDatabase", "TestStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_SrcDatabase", "TestStep", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Package")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Package : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Package object.
        /// </summary>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="packageName">Initial value of the PackageName property.</param>
        public static Package CreatePackage(global::System.Int32 packageID, global::System.String packageName)
        {
            Package package = new Package();
            package.PackageID = packageID;
            package.PackageName = packageName;
            return package;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                if (_PackageID != value)
                {
                    OnPackageIDChanging(value);
                    ReportPropertyChanging("PackageID");
                    _PackageID = value;
                    ReportPropertyChanged("PackageID");
                    OnPackageIDChanged();
                }
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageName
        {
            get
            {
                return _PackageName;
            }
            set
            {
                OnPackageNameChanging(value);
                ReportPropertyChanging("PackageName");
                _PackageName = value;
                ReportPropertyChanged("PackageName");
                OnPackageNameChanged();
            }
        }
        private global::System.String _PackageName;
        partial void OnPackageNameChanging(global::System.String value);
        partial void OnPackageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PackageGUID
        {
            get
            {
                return _PackageGUID;
            }
            set
            {
                OnPackageGUIDChanging(value);
                ReportPropertyChanging("PackageGUID");
                _PackageGUID = value;
                ReportPropertyChanged("PackageGUID");
                OnPackageGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PackageGUID;
        partial void OnPackageGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPackageGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_Package", "TestStep")]
        public EntityCollection<TestStep> TestSteps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_Package", "TestStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_Package", "TestStep", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Run")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Run : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Run object.
        /// </summary>
        /// <param name="runID">Initial value of the RunID property.</param>
        /// <param name="testID">Initial value of the TestID property.</param>
        public static Run CreateRun(global::System.Int32 runID, global::System.Int32 testID)
        {
            Run run = new Run();
            run.RunID = runID;
            run.TestID = testID;
            return run;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RunID
        {
            get
            {
                return _RunID;
            }
            set
            {
                if (_RunID != value)
                {
                    OnRunIDChanging(value);
                    ReportPropertyChanging("RunID");
                    _RunID = value;
                    ReportPropertyChanged("RunID");
                    OnRunIDChanged();
                }
            }
        }
        private global::System.Int32 _RunID;
        partial void OnRunIDChanging(global::System.Int32 value);
        partial void OnRunIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RunStartTime
        {
            get
            {
                return _RunStartTime;
            }
            set
            {
                OnRunStartTimeChanging(value);
                ReportPropertyChanging("RunStartTime");
                _RunStartTime = value;
                ReportPropertyChanged("RunStartTime");
                OnRunStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RunStartTime;
        partial void OnRunStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRunStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RunEndTime
        {
            get
            {
                return _RunEndTime;
            }
            set
            {
                OnRunEndTimeChanging(value);
                ReportPropertyChanging("RunEndTime");
                _RunEndTime = value;
                ReportPropertyChanged("RunEndTime");
                OnRunEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RunEndTime;
        partial void OnRunEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRunEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RunTime
        {
            get
            {
                return _RunTime;
            }
            set
            {
                OnRunTimeChanging(value);
                ReportPropertyChanging("RunTime");
                _RunTime = value;
                ReportPropertyChanged("RunTime");
                OnRunTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _RunTime;
        partial void OnRunTimeChanging(Nullable<global::System.Int32> value);
        partial void OnRunTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                OnTestIDChanging(value);
                ReportPropertyChanging("TestID");
                _TestID = value;
                ReportPropertyChanged("TestID");
                OnTestIDChanged();
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Run_Test", "Test")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LightSwitchApplication.FK_Run_Test", "Test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LightSwitchApplication.FK_Run_Test", "Test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LightSwitchApplication.FK_Run_Test", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("LightSwitchApplication.FK_Run_Test", "Test", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RunStep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RunStep : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RunStep object.
        /// </summary>
        /// <param name="runStepID">Initial value of the RunStepID property.</param>
        /// <param name="testStepID">Initial value of the TestStepID property.</param>
        public static RunStep CreateRunStep(global::System.Int32 runStepID, global::System.Int32 testStepID)
        {
            RunStep runStep = new RunStep();
            runStep.RunStepID = runStepID;
            runStep.TestStepID = testStepID;
            return runStep;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RunStepID
        {
            get
            {
                return _RunStepID;
            }
            set
            {
                if (_RunStepID != value)
                {
                    OnRunStepIDChanging(value);
                    ReportPropertyChanging("RunStepID");
                    _RunStepID = value;
                    ReportPropertyChanged("RunStepID");
                    OnRunStepIDChanged();
                }
            }
        }
        private global::System.Int32 _RunStepID;
        partial void OnRunStepIDChanging(global::System.Int32 value);
        partial void OnRunStepIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RunStepStartTime
        {
            get
            {
                return _RunStepStartTime;
            }
            set
            {
                OnRunStepStartTimeChanging(value);
                ReportPropertyChanging("RunStepStartTime");
                _RunStepStartTime = value;
                ReportPropertyChanged("RunStepStartTime");
                OnRunStepStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RunStepStartTime;
        partial void OnRunStepStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRunStepStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RunStepEndTime
        {
            get
            {
                return _RunStepEndTime;
            }
            set
            {
                OnRunStepEndTimeChanging(value);
                ReportPropertyChanging("RunStepEndTime");
                _RunStepEndTime = value;
                ReportPropertyChanged("RunStepEndTime");
                OnRunStepEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RunStepEndTime;
        partial void OnRunStepEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRunStepEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RunStepTime
        {
            get
            {
                return _RunStepTime;
            }
            set
            {
                OnRunStepTimeChanging(value);
                ReportPropertyChanging("RunStepTime");
                _RunStepTime = value;
                ReportPropertyChanged("RunStepTime");
                OnRunStepTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _RunStepTime;
        partial void OnRunStepTimeChanging(Nullable<global::System.Int32> value);
        partial void OnRunStepTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestStepID
        {
            get
            {
                return _TestStepID;
            }
            set
            {
                OnTestStepIDChanging(value);
                ReportPropertyChanging("TestStepID");
                _TestStepID = value;
                ReportPropertyChanged("TestStepID");
                OnTestStepIDChanged();
            }
        }
        private global::System.Int32 _TestStepID;
        partial void OnTestStepIDChanging(global::System.Int32 value);
        partial void OnTestStepIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RunStep_TestStep", "TestStep")]
        public TestStep TestStep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestStep>("LightSwitchApplication.FK_RunStep_TestStep", "TestStep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestStep>("LightSwitchApplication.FK_RunStep_TestStep", "TestStep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestStep> TestStepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestStep>("LightSwitchApplication.FK_RunStep_TestStep", "TestStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestStep>("LightSwitchApplication.FK_RunStep_TestStep", "TestStep", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Test")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Test : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Test object.
        /// </summary>
        /// <param name="testID">Initial value of the TestID property.</param>
        /// <param name="testName">Initial value of the TestName property.</param>
        public static Test CreateTest(global::System.Int32 testID, global::System.String testName)
        {
            Test test = new Test();
            test.TestID = testID;
            test.TestName = testName;
            return test;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                if (_TestID != value)
                {
                    OnTestIDChanging(value);
                    ReportPropertyChanging("TestID");
                    _TestID = value;
                    ReportPropertyChanged("TestID");
                    OnTestIDChanged();
                }
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestName
        {
            get
            {
                return _TestName;
            }
            set
            {
                OnTestNameChanging(value);
                ReportPropertyChanging("TestName");
                _TestName = value;
                ReportPropertyChanged("TestName");
                OnTestNameChanged();
            }
        }
        private global::System.String _TestName;
        partial void OnTestNameChanging(global::System.String value);
        partial void OnTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Run_Test", "Run")]
        public EntityCollection<Run> Runs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Run>("LightSwitchApplication.FK_Run_Test", "Run");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Run>("LightSwitchApplication.FK_Run_Test", "Run", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_Test", "TestStep")]
        public EntityCollection<TestStep> TestSteps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_Test", "TestStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestStep>("LightSwitchApplication.FK_TestStep_Test", "TestStep", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TestStep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestStep : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestStep object.
        /// </summary>
        /// <param name="testStepID">Initial value of the TestStepID property.</param>
        /// <param name="testStepName">Initial value of the TestStepName property.</param>
        /// <param name="destDatabaseID">Initial value of the DestDatabaseID property.</param>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="srcDatabaseID">Initial value of the SrcDatabaseID property.</param>
        /// <param name="testID">Initial value of the TestID property.</param>
        public static TestStep CreateTestStep(global::System.Int32 testStepID, global::System.String testStepName, global::System.Int32 destDatabaseID, global::System.Int32 packageID, global::System.Int32 srcDatabaseID, global::System.Int32 testID)
        {
            TestStep testStep = new TestStep();
            testStep.TestStepID = testStepID;
            testStep.TestStepName = testStepName;
            testStep.DestDatabaseID = destDatabaseID;
            testStep.PackageID = packageID;
            testStep.SrcDatabaseID = srcDatabaseID;
            testStep.TestID = testID;
            return testStep;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestStepID
        {
            get
            {
                return _TestStepID;
            }
            set
            {
                if (_TestStepID != value)
                {
                    OnTestStepIDChanging(value);
                    ReportPropertyChanging("TestStepID");
                    _TestStepID = value;
                    ReportPropertyChanged("TestStepID");
                    OnTestStepIDChanged();
                }
            }
        }
        private global::System.Int32 _TestStepID;
        partial void OnTestStepIDChanging(global::System.Int32 value);
        partial void OnTestStepIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestStepName
        {
            get
            {
                return _TestStepName;
            }
            set
            {
                OnTestStepNameChanging(value);
                ReportPropertyChanging("TestStepName");
                _TestStepName = value;
                ReportPropertyChanged("TestStepName");
                OnTestStepNameChanged();
            }
        }
        private global::System.String _TestStepName;
        partial void OnTestStepNameChanging(global::System.String value);
        partial void OnTestStepNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestDatabaseID
        {
            get
            {
                return _DestDatabaseID;
            }
            set
            {
                OnDestDatabaseIDChanging(value);
                ReportPropertyChanging("DestDatabaseID");
                _DestDatabaseID = value;
                ReportPropertyChanged("DestDatabaseID");
                OnDestDatabaseIDChanged();
            }
        }
        private global::System.Int32 _DestDatabaseID;
        partial void OnDestDatabaseIDChanging(global::System.Int32 value);
        partial void OnDestDatabaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                OnPackageIDChanging(value);
                ReportPropertyChanging("PackageID");
                _PackageID = value;
                ReportPropertyChanged("PackageID");
                OnPackageIDChanged();
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SrcDatabaseID
        {
            get
            {
                return _SrcDatabaseID;
            }
            set
            {
                OnSrcDatabaseIDChanging(value);
                ReportPropertyChanging("SrcDatabaseID");
                _SrcDatabaseID = value;
                ReportPropertyChanged("SrcDatabaseID");
                OnSrcDatabaseIDChanged();
            }
        }
        private global::System.Int32 _SrcDatabaseID;
        partial void OnSrcDatabaseIDChanging(global::System.Int32 value);
        partial void OnSrcDatabaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                OnTestIDChanging(value);
                ReportPropertyChanging("TestID");
                _TestID = value;
                ReportPropertyChanged("TestID");
                OnTestIDChanged();
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RunStep_TestStep", "RunStep")]
        public EntityCollection<RunStep> RunSteps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RunStep>("LightSwitchApplication.FK_RunStep_TestStep", "RunStep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RunStep>("LightSwitchApplication.FK_RunStep_TestStep", "RunStep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_DestDatabase", "Database")]
        public Database SrcDatabase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Database>("LightSwitchApplication.FK_TestStep_DestDatabase", "Database").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Database>("LightSwitchApplication.FK_TestStep_DestDatabase", "Database").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Database> SrcDatabaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Database>("LightSwitchApplication.FK_TestStep_DestDatabase", "Database");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Database>("LightSwitchApplication.FK_TestStep_DestDatabase", "Database", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_Package", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("LightSwitchApplication.FK_TestStep_Package", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("LightSwitchApplication.FK_TestStep_Package", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("LightSwitchApplication.FK_TestStep_Package", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("LightSwitchApplication.FK_TestStep_Package", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_SrcDatabase", "Database")]
        public Database DestDatabase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Database>("LightSwitchApplication.FK_TestStep_SrcDatabase", "Database").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Database>("LightSwitchApplication.FK_TestStep_SrcDatabase", "Database").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Database> DestDatabaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Database>("LightSwitchApplication.FK_TestStep_SrcDatabase", "Database");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Database>("LightSwitchApplication.FK_TestStep_SrcDatabase", "Database", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TestStep_Test", "Test")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LightSwitchApplication.FK_TestStep_Test", "Test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LightSwitchApplication.FK_TestStep_Test", "Test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LightSwitchApplication.FK_TestStep_Test", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("LightSwitchApplication.FK_TestStep_Test", "Test", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
