//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the PerformanceTest datasource.
    /// </summary>
    public sealed partial class PerformanceTestService
        : global::LightSwitchApplication.PerformanceTest
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PerformanceTestService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Inserting(global::LightSwitchApplication.Database entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Inserted(global::LightSwitchApplication.Database entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Updating(global::LightSwitchApplication.Database entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Updated(global::LightSwitchApplication.Database entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Deleting(global::LightSwitchApplication.Database entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Deleted(global::LightSwitchApplication.Database entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Validate(global::LightSwitchApplication.Database entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Databases_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Database, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Inserting(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Inserted(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Updating(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Updated(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Deleting(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Deleted(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Validate(global::LightSwitchApplication.Package entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Inserting(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Inserted(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Updating(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Updated(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Deleting(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Deleted(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Validate(global::LightSwitchApplication.Run entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Run, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Inserting(global::LightSwitchApplication.RunStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Inserted(global::LightSwitchApplication.RunStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Updating(global::LightSwitchApplication.RunStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Updated(global::LightSwitchApplication.RunStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Deleting(global::LightSwitchApplication.RunStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Deleted(global::LightSwitchApplication.RunStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Validate(global::LightSwitchApplication.RunStep entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RunSteps_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RunStep, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Inserting(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Inserted(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Updating(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Updated(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Deleting(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Deleted(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Validate(global::LightSwitchApplication.Test entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Test, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Inserting(global::LightSwitchApplication.TestStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Inserted(global::LightSwitchApplication.TestStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Updating(global::LightSwitchApplication.TestStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Updated(global::LightSwitchApplication.TestStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Deleting(global::LightSwitchApplication.TestStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Deleted(global::LightSwitchApplication.TestStep entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Validate(global::LightSwitchApplication.TestStep entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestSteps_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TestStep, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Database>
                __DatabasesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Database>(
                    "Databases",
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_CanInsert,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_CanUpdate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_CanDelete,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_CanRead,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Inserting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Inserted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Updating,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Updated,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Deleting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Deleted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Validate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Databases_Filter);
            private static bool __Databases_CanInsert(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Databases_CanInsert(ref result);
                return result;
            }
            private static bool __Databases_CanUpdate(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Databases_CanUpdate(ref result);
                return result;
            }
            private static bool __Databases_CanDelete(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Databases_CanDelete(ref result);
                return result;
            }
            private static bool __Databases_CanRead(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Databases_CanRead(ref result);
                return result;
            }
            private static void __Databases_Inserting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Database e)
            {
                d.Databases_Inserting(e);
            }
            private static void __Databases_Inserted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Database e)
            {
                d.Databases_Inserted(e);
            }
            private static void __Databases_Updating(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Database e)
            {
                d.Databases_Updating(e);
            }
            private static void __Databases_Updated(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Database e)
            {
                d.Databases_Updated(e);
            }
            private static void __Databases_Deleting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Database e)
            {
                d.Databases_Deleting(e);
            }
            private static void __Databases_Deleted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Database e)
            {
                d.Databases_Deleted(e);
            }
            private static void __Databases_Validate(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Database e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Databases_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Database, bool>> __Databases_Filter(global::LightSwitchApplication.PerformanceTestService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Database, bool>> filter = null;
                d.Databases_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Package>
                __PackagesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Package>(
                    "Packages",
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_CanInsert,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_CanUpdate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_CanDelete,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_CanRead,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Inserting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Inserted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Updating,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Updated,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Deleting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Deleted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Validate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Packages_Filter);
            private static bool __Packages_CanInsert(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Packages_CanInsert(ref result);
                return result;
            }
            private static bool __Packages_CanUpdate(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Packages_CanUpdate(ref result);
                return result;
            }
            private static bool __Packages_CanDelete(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Packages_CanDelete(ref result);
                return result;
            }
            private static bool __Packages_CanRead(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Packages_CanRead(ref result);
                return result;
            }
            private static void __Packages_Inserting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Inserting(e);
            }
            private static void __Packages_Inserted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Inserted(e);
            }
            private static void __Packages_Updating(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Updating(e);
            }
            private static void __Packages_Updated(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Updated(e);
            }
            private static void __Packages_Deleting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Deleting(e);
            }
            private static void __Packages_Deleted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Deleted(e);
            }
            private static void __Packages_Validate(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Package e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Packages_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> __Packages_Filter(global::LightSwitchApplication.PerformanceTestService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> filter = null;
                d.Packages_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Run>
                __RunsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Run>(
                    "Runs",
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_CanInsert,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_CanUpdate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_CanDelete,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_CanRead,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Inserting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Inserted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Updating,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Updated,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Deleting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Deleted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Validate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Runs_Filter);
            private static bool __Runs_CanInsert(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Runs_CanInsert(ref result);
                return result;
            }
            private static bool __Runs_CanUpdate(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Runs_CanUpdate(ref result);
                return result;
            }
            private static bool __Runs_CanDelete(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Runs_CanDelete(ref result);
                return result;
            }
            private static bool __Runs_CanRead(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Runs_CanRead(ref result);
                return result;
            }
            private static void __Runs_Inserting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Inserting(e);
            }
            private static void __Runs_Inserted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Inserted(e);
            }
            private static void __Runs_Updating(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Updating(e);
            }
            private static void __Runs_Updated(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Updated(e);
            }
            private static void __Runs_Deleting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Deleting(e);
            }
            private static void __Runs_Deleted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Deleted(e);
            }
            private static void __Runs_Validate(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Run e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Runs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Run, bool>> __Runs_Filter(global::LightSwitchApplication.PerformanceTestService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Run, bool>> filter = null;
                d.Runs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.RunStep>
                __RunStepsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.RunStep>(
                    "RunSteps",
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_CanInsert,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_CanUpdate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_CanDelete,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_CanRead,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Inserting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Inserted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Updating,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Updated,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Deleting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Deleted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Validate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__RunSteps_Filter);
            private static bool __RunSteps_CanInsert(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.RunSteps_CanInsert(ref result);
                return result;
            }
            private static bool __RunSteps_CanUpdate(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.RunSteps_CanUpdate(ref result);
                return result;
            }
            private static bool __RunSteps_CanDelete(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.RunSteps_CanDelete(ref result);
                return result;
            }
            private static bool __RunSteps_CanRead(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.RunSteps_CanRead(ref result);
                return result;
            }
            private static void __RunSteps_Inserting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.RunStep e)
            {
                d.RunSteps_Inserting(e);
            }
            private static void __RunSteps_Inserted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.RunStep e)
            {
                d.RunSteps_Inserted(e);
            }
            private static void __RunSteps_Updating(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.RunStep e)
            {
                d.RunSteps_Updating(e);
            }
            private static void __RunSteps_Updated(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.RunStep e)
            {
                d.RunSteps_Updated(e);
            }
            private static void __RunSteps_Deleting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.RunStep e)
            {
                d.RunSteps_Deleting(e);
            }
            private static void __RunSteps_Deleted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.RunStep e)
            {
                d.RunSteps_Deleted(e);
            }
            private static void __RunSteps_Validate(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.RunStep e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.RunSteps_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RunStep, bool>> __RunSteps_Filter(global::LightSwitchApplication.PerformanceTestService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RunStep, bool>> filter = null;
                d.RunSteps_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Test>
                __TestsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.Test>(
                    "Tests",
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_CanInsert,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_CanUpdate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_CanDelete,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_CanRead,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Inserting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Inserted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Updating,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Updated,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Deleting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Deleted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Validate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Tests_Filter);
            private static bool __Tests_CanInsert(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Tests_CanInsert(ref result);
                return result;
            }
            private static bool __Tests_CanUpdate(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Tests_CanUpdate(ref result);
                return result;
            }
            private static bool __Tests_CanDelete(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Tests_CanDelete(ref result);
                return result;
            }
            private static bool __Tests_CanRead(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.Tests_CanRead(ref result);
                return result;
            }
            private static void __Tests_Inserting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Inserting(e);
            }
            private static void __Tests_Inserted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Inserted(e);
            }
            private static void __Tests_Updating(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Updating(e);
            }
            private static void __Tests_Updated(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Updated(e);
            }
            private static void __Tests_Deleting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Deleting(e);
            }
            private static void __Tests_Deleted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Deleted(e);
            }
            private static void __Tests_Validate(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.Test e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Tests_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Test, bool>> __Tests_Filter(global::LightSwitchApplication.PerformanceTestService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Test, bool>> filter = null;
                d.Tests_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.TestStep>
                __TestStepsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PerformanceTestService, global::LightSwitchApplication.TestStep>(
                    "TestSteps",
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_CanInsert,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_CanUpdate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_CanDelete,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_CanRead,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Inserting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Inserted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Updating,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Updated,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Deleting,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Deleted,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Validate,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__TestSteps_Filter);
            private static bool __TestSteps_CanInsert(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.TestSteps_CanInsert(ref result);
                return result;
            }
            private static bool __TestSteps_CanUpdate(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.TestSteps_CanUpdate(ref result);
                return result;
            }
            private static bool __TestSteps_CanDelete(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.TestSteps_CanDelete(ref result);
                return result;
            }
            private static bool __TestSteps_CanRead(global::LightSwitchApplication.PerformanceTestService d)
            {
                bool result = true;
                d.TestSteps_CanRead(ref result);
                return result;
            }
            private static void __TestSteps_Inserting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.TestStep e)
            {
                d.TestSteps_Inserting(e);
            }
            private static void __TestSteps_Inserted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.TestStep e)
            {
                d.TestSteps_Inserted(e);
            }
            private static void __TestSteps_Updating(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.TestStep e)
            {
                d.TestSteps_Updating(e);
            }
            private static void __TestSteps_Updated(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.TestStep e)
            {
                d.TestSteps_Updated(e);
            }
            private static void __TestSteps_Deleting(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.TestStep e)
            {
                d.TestSteps_Deleting(e);
            }
            private static void __TestSteps_Deleted(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.TestStep e)
            {
                d.TestSteps_Deleted(e);
            }
            private static void __TestSteps_Validate(global::LightSwitchApplication.PerformanceTestService d, global::LightSwitchApplication.TestStep e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TestSteps_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TestStep, bool>> __TestSteps_Filter(global::LightSwitchApplication.PerformanceTestService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TestStep, bool>> filter = null;
                d.TestSteps_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.PerformanceTestService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.PerformanceTestService>(
                    "SaveChanges",
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.PerformanceTestService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.PerformanceTestService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.PerformanceTestService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.PerformanceTestService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.PerformanceTestService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.PerformanceTestService>(
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.PerformanceTestService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.PerformanceTestService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.PerformanceTestService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.PerformanceTestService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
