//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the Aphelion_DB_BalancingData datasource.
    /// </summary>
    public sealed partial class Aphelion_DB_BalancingDataService
        : global::LightSwitchApplication.Aphelion_DB_BalancingData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Aphelion_DB_BalancingDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Inserting(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Inserted(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Updating(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Updated(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Deleting(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Deleted(global::LightSwitchApplication.DataSource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Validate(global::LightSwitchApplication.DataSource entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSources_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSource, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Inserting(global::LightSwitchApplication.DataSourceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Inserted(global::LightSwitchApplication.DataSourceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Updating(global::LightSwitchApplication.DataSourceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Updated(global::LightSwitchApplication.DataSourceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Deleting(global::LightSwitchApplication.DataSourceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Deleted(global::LightSwitchApplication.DataSourceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Validate(global::LightSwitchApplication.DataSourceType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataSourceTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSourceType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Inserting(global::LightSwitchApplication.FunctionalArea entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Inserted(global::LightSwitchApplication.FunctionalArea entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Updating(global::LightSwitchApplication.FunctionalArea entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Updated(global::LightSwitchApplication.FunctionalArea entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Deleting(global::LightSwitchApplication.FunctionalArea entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Deleted(global::LightSwitchApplication.FunctionalArea entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Validate(global::LightSwitchApplication.FunctionalArea entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FunctionalAreas_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FunctionalArea, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Inserting(global::LightSwitchApplication.Query entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Inserted(global::LightSwitchApplication.Query entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Updating(global::LightSwitchApplication.Query entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Updated(global::LightSwitchApplication.Query entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Deleting(global::LightSwitchApplication.Query entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Deleted(global::LightSwitchApplication.Query entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Validate(global::LightSwitchApplication.Query entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Queries_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Query, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Inserting(global::LightSwitchApplication.Result entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Inserted(global::LightSwitchApplication.Result entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Updating(global::LightSwitchApplication.Result entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Updated(global::LightSwitchApplication.Result entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Deleting(global::LightSwitchApplication.Result entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Deleted(global::LightSwitchApplication.Result entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Validate(global::LightSwitchApplication.Result entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Results_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Result, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Inserting(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Inserted(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Updating(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Updated(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Deleting(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Deleted(global::LightSwitchApplication.Run entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Validate(global::LightSwitchApplication.Run entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Run, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Inserting(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Inserted(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Updating(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Updated(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Deleting(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Deleted(global::LightSwitchApplication.Test entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Validate(global::LightSwitchApplication.Test entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tests_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Test, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.DataSource>
                __DataSourcesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.DataSource>(
                    "DataSources",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_CanInsert,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_CanUpdate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_CanDelete,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_CanRead,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Inserting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Inserted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Updating,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Updated,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Deleting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Deleted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Validate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSources_Filter);
            private static bool __DataSources_CanInsert(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSources_CanInsert(ref result);
                return result;
            }
            private static bool __DataSources_CanUpdate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSources_CanUpdate(ref result);
                return result;
            }
            private static bool __DataSources_CanDelete(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSources_CanDelete(ref result);
                return result;
            }
            private static bool __DataSources_CanRead(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSources_CanRead(ref result);
                return result;
            }
            private static void __DataSources_Inserting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Inserting(e);
            }
            private static void __DataSources_Inserted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Inserted(e);
            }
            private static void __DataSources_Updating(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Updating(e);
            }
            private static void __DataSources_Updated(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Updated(e);
            }
            private static void __DataSources_Deleting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Deleting(e);
            }
            private static void __DataSources_Deleted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSource e)
            {
                d.DataSources_Deleted(e);
            }
            private static void __DataSources_Validate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSource e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DataSources_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSource, bool>> __DataSources_Filter(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSource, bool>> filter = null;
                d.DataSources_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.DataSourceType>
                __DataSourceTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.DataSourceType>(
                    "DataSourceTypes",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_CanInsert,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_CanUpdate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_CanDelete,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_CanRead,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Inserting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Inserted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Updating,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Updated,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Deleting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Deleted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Validate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__DataSourceTypes_Filter);
            private static bool __DataSourceTypes_CanInsert(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSourceTypes_CanInsert(ref result);
                return result;
            }
            private static bool __DataSourceTypes_CanUpdate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSourceTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __DataSourceTypes_CanDelete(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSourceTypes_CanDelete(ref result);
                return result;
            }
            private static bool __DataSourceTypes_CanRead(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.DataSourceTypes_CanRead(ref result);
                return result;
            }
            private static void __DataSourceTypes_Inserting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSourceType e)
            {
                d.DataSourceTypes_Inserting(e);
            }
            private static void __DataSourceTypes_Inserted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSourceType e)
            {
                d.DataSourceTypes_Inserted(e);
            }
            private static void __DataSourceTypes_Updating(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSourceType e)
            {
                d.DataSourceTypes_Updating(e);
            }
            private static void __DataSourceTypes_Updated(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSourceType e)
            {
                d.DataSourceTypes_Updated(e);
            }
            private static void __DataSourceTypes_Deleting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSourceType e)
            {
                d.DataSourceTypes_Deleting(e);
            }
            private static void __DataSourceTypes_Deleted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSourceType e)
            {
                d.DataSourceTypes_Deleted(e);
            }
            private static void __DataSourceTypes_Validate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.DataSourceType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DataSourceTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSourceType, bool>> __DataSourceTypes_Filter(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DataSourceType, bool>> filter = null;
                d.DataSourceTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.FunctionalArea>
                __FunctionalAreasEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.FunctionalArea>(
                    "FunctionalAreas",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_CanInsert,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_CanUpdate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_CanDelete,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_CanRead,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Inserting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Inserted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Updating,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Updated,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Deleting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Deleted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Validate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__FunctionalAreas_Filter);
            private static bool __FunctionalAreas_CanInsert(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.FunctionalAreas_CanInsert(ref result);
                return result;
            }
            private static bool __FunctionalAreas_CanUpdate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.FunctionalAreas_CanUpdate(ref result);
                return result;
            }
            private static bool __FunctionalAreas_CanDelete(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.FunctionalAreas_CanDelete(ref result);
                return result;
            }
            private static bool __FunctionalAreas_CanRead(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.FunctionalAreas_CanRead(ref result);
                return result;
            }
            private static void __FunctionalAreas_Inserting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.FunctionalArea e)
            {
                d.FunctionalAreas_Inserting(e);
            }
            private static void __FunctionalAreas_Inserted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.FunctionalArea e)
            {
                d.FunctionalAreas_Inserted(e);
            }
            private static void __FunctionalAreas_Updating(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.FunctionalArea e)
            {
                d.FunctionalAreas_Updating(e);
            }
            private static void __FunctionalAreas_Updated(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.FunctionalArea e)
            {
                d.FunctionalAreas_Updated(e);
            }
            private static void __FunctionalAreas_Deleting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.FunctionalArea e)
            {
                d.FunctionalAreas_Deleting(e);
            }
            private static void __FunctionalAreas_Deleted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.FunctionalArea e)
            {
                d.FunctionalAreas_Deleted(e);
            }
            private static void __FunctionalAreas_Validate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.FunctionalArea e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.FunctionalAreas_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FunctionalArea, bool>> __FunctionalAreas_Filter(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FunctionalArea, bool>> filter = null;
                d.FunctionalAreas_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Query>
                __QueriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Query>(
                    "Queries",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_CanInsert,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_CanUpdate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_CanDelete,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_CanRead,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Inserting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Inserted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Updating,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Updated,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Deleting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Deleted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Validate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Queries_Filter);
            private static bool __Queries_CanInsert(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Queries_CanInsert(ref result);
                return result;
            }
            private static bool __Queries_CanUpdate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Queries_CanUpdate(ref result);
                return result;
            }
            private static bool __Queries_CanDelete(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Queries_CanDelete(ref result);
                return result;
            }
            private static bool __Queries_CanRead(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Queries_CanRead(ref result);
                return result;
            }
            private static void __Queries_Inserting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Query e)
            {
                d.Queries_Inserting(e);
            }
            private static void __Queries_Inserted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Query e)
            {
                d.Queries_Inserted(e);
            }
            private static void __Queries_Updating(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Query e)
            {
                d.Queries_Updating(e);
            }
            private static void __Queries_Updated(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Query e)
            {
                d.Queries_Updated(e);
            }
            private static void __Queries_Deleting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Query e)
            {
                d.Queries_Deleting(e);
            }
            private static void __Queries_Deleted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Query e)
            {
                d.Queries_Deleted(e);
            }
            private static void __Queries_Validate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Query e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Queries_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Query, bool>> __Queries_Filter(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Query, bool>> filter = null;
                d.Queries_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Result>
                __ResultsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Result>(
                    "Results",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_CanInsert,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_CanUpdate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_CanDelete,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_CanRead,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Inserting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Inserted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Updating,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Updated,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Deleting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Deleted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Validate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Results_Filter);
            private static bool __Results_CanInsert(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Results_CanInsert(ref result);
                return result;
            }
            private static bool __Results_CanUpdate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Results_CanUpdate(ref result);
                return result;
            }
            private static bool __Results_CanDelete(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Results_CanDelete(ref result);
                return result;
            }
            private static bool __Results_CanRead(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Results_CanRead(ref result);
                return result;
            }
            private static void __Results_Inserting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Result e)
            {
                d.Results_Inserting(e);
            }
            private static void __Results_Inserted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Result e)
            {
                d.Results_Inserted(e);
            }
            private static void __Results_Updating(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Result e)
            {
                d.Results_Updating(e);
            }
            private static void __Results_Updated(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Result e)
            {
                d.Results_Updated(e);
            }
            private static void __Results_Deleting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Result e)
            {
                d.Results_Deleting(e);
            }
            private static void __Results_Deleted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Result e)
            {
                d.Results_Deleted(e);
            }
            private static void __Results_Validate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Result e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Results_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Result, bool>> __Results_Filter(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Result, bool>> filter = null;
                d.Results_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Run>
                __RunsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Run>(
                    "Runs",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_CanInsert,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_CanUpdate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_CanDelete,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_CanRead,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Inserting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Inserted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Updating,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Updated,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Deleting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Deleted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Validate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Runs_Filter);
            private static bool __Runs_CanInsert(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Runs_CanInsert(ref result);
                return result;
            }
            private static bool __Runs_CanUpdate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Runs_CanUpdate(ref result);
                return result;
            }
            private static bool __Runs_CanDelete(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Runs_CanDelete(ref result);
                return result;
            }
            private static bool __Runs_CanRead(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Runs_CanRead(ref result);
                return result;
            }
            private static void __Runs_Inserting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Inserting(e);
            }
            private static void __Runs_Inserted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Inserted(e);
            }
            private static void __Runs_Updating(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Updating(e);
            }
            private static void __Runs_Updated(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Updated(e);
            }
            private static void __Runs_Deleting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Deleting(e);
            }
            private static void __Runs_Deleted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Run e)
            {
                d.Runs_Deleted(e);
            }
            private static void __Runs_Validate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Run e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Runs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Run, bool>> __Runs_Filter(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Run, bool>> filter = null;
                d.Runs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Test>
                __TestsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService, global::LightSwitchApplication.Test>(
                    "Tests",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_CanInsert,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_CanUpdate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_CanDelete,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_CanRead,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Inserting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Inserted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Updating,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Updated,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Deleting,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Deleted,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Validate,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Tests_Filter);
            private static bool __Tests_CanInsert(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Tests_CanInsert(ref result);
                return result;
            }
            private static bool __Tests_CanUpdate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Tests_CanUpdate(ref result);
                return result;
            }
            private static bool __Tests_CanDelete(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Tests_CanDelete(ref result);
                return result;
            }
            private static bool __Tests_CanRead(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                bool result = true;
                d.Tests_CanRead(ref result);
                return result;
            }
            private static void __Tests_Inserting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Inserting(e);
            }
            private static void __Tests_Inserted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Inserted(e);
            }
            private static void __Tests_Updating(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Updating(e);
            }
            private static void __Tests_Updated(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Updated(e);
            }
            private static void __Tests_Deleting(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Deleting(e);
            }
            private static void __Tests_Deleted(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Test e)
            {
                d.Tests_Deleted(e);
            }
            private static void __Tests_Validate(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::LightSwitchApplication.Test e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Tests_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Test, bool>> __Tests_Filter(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Test, bool>> filter = null;
                d.Tests_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.Aphelion_DB_BalancingDataService>(
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.Aphelion_DB_BalancingDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.Aphelion_DB_BalancingDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
